{
  "contractName": "DarknodeSlasher",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "darknodeRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_darknodeRegistry",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_prover",
          "type": "address"
        },
        {
          "name": "_challenger1",
          "type": "address"
        },
        {
          "name": "_challenger2",
          "type": "address"
        }
      ],
      "name": "slash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_prover\",\"type\":\"address\"},{\"name\":\"_challenger1\",\"type\":\"address\"},{\"name\":\"_challenger2\",\"type\":\"address\"}],\"name\":\"slash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"darknodeRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_darknodeRegistry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{},\"notice\":\"DarknodeSlasher will become a voting system for darknodes to deregister other misbehaving darknodes. Right now, it is a placeholder.\"}},\"settings\":{\"compilationTarget\":{\"/home/noah/github/renproject/darknode-sol/contracts/DarknodeSlasher/DarknodeSlasher.sol\":\"DarknodeSlasher\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/noah/github/renproject/darknode-sol/contracts/DarknodeRegistry/DarknodeRegistry.sol\":{\"keccak256\":\"0xbf74543437c829efd8b3168c98d115e87ac613800c5cc8af900a0f5c1fb9f8e0\",\"urls\":[\"bzzr://dbd534dccb422ebba8ccae307000efdcc8d058d70744e93ace853ba0d096f365\"]},\"/home/noah/github/renproject/darknode-sol/contracts/DarknodeRegistry/DarknodeRegistryStore.sol\":{\"keccak256\":\"0x423b0630cad633c8385e457c0762a8d4b2a5028ee2e89af3f112d5f2d3a04022\",\"urls\":[\"bzzr://de7a014c67223932f191f05238df1a37fa3d325dad943787b3506f072af8e444\"]},\"/home/noah/github/renproject/darknode-sol/contracts/DarknodeSlasher/DarknodeSlasher.sol\":{\"keccak256\":\"0x815e7571a0fd9b61f8f8bf693e7891ab78bbf36b20781012ac64c12f56ef36c5\",\"urls\":[\"bzzr://8e02714dc3b3bf491d533506859802a0756b444ba1b06b6ff64184a723f8697b\"]},\"/home/noah/github/renproject/darknode-sol/contracts/RenToken/RenToken.sol\":{\"keccak256\":\"0x574c593875a7afc210e709573a4d46d6ad6ea60d348ade04692149aae68a85da\",\"urls\":[\"bzzr://6216d6c45babda33bf82905fd7384368d9529b6e572f435c2a217bd7634467e9\"]},\"/home/noah/github/renproject/darknode-sol/contracts/libraries/Claimable.sol\":{\"keccak256\":\"0xc018debe94de6dd9df7a76d199885798340738e2271b4affe17fb53c9234ab0a\",\"urls\":[\"bzzr://930431f7fb09faa65dfa2c171575d906d894cee394def442a938b1be7b61023e\"]},\"/home/noah/github/renproject/darknode-sol/contracts/libraries/LinkedList.sol\":{\"keccak256\":\"0x318273ca74f037e14739675b74e3538fa6d08ff412869f1931aacd351d35bdcc\",\"urls\":[\"bzzr://2174bf7bb80a3ed2d366ac0041168e2478c5b0a65b9a8aeaf99a0058e3021f53\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xf6826c684d51ca28db5293ce11a54c5cca1c757b6cd32b87613833c65086f995\",\"urls\":[\"bzzr://01b2756ab5b41b1d7ccadfeac53fbdce9c889263f1e011329c300c5fa3fda65f\"]},\"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x609f8cb524cd6b502624c79c099ec2fc6f23eef57b5c38e28efd82490875f37e\",\"urls\":[\"bzzr://46ee461a64298ef418bd100df1301355f4dc9ffeb06fe7a39aaf98d45c0bf988\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzzr://07fb42206812a17c1f71e548cfa5cec6f9aa1ae0ca5df870718ca4aa9759d1a5\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa5ebf3344a36eb60e723e0764d85251c496e15e4b2d737b56415502b559a1765\",\"urls\":[\"bzzr://68812cb0a1d373d12c6986f5a9314c9bae7891a07a0e301d2317fcf409102f54\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzzr://f280f38d5ab6e1b89fd898ccd3901054a56572c141d91d30302e2db1db4cc6ff\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xc4973487824e5855e78e27d685b387566df52ea4b0854ba60b8703b533de47d4\",\"urls\":[\"bzzr://299d2f2c37a1b0cc8b15927fc516cc7f8a8f48e246512b3b3880bd3e4f0220d4\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806104cd8339810180604052602081101561003057600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600180546001600160a01b0319166001600160a01b0392909216919091179055610423806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063563bf26414610067578063715018a6146100a15780638da5cb5b146100a95780638f32d59b146100cd5780639e45e0d0146100e9578063f2fde38b146100f1575b600080fd5b61009f6004803603606081101561007d57600080fd5b506001600160a01b038135811691602081013582169160409091013516610117565b005b61009f6101f1565b6100b1610297565b604080516001600160a01b039092168252519081900360200190f35b6100d56102a6565b604080519115158252519081900360200190f35b6100b16102b7565b61009f6004803603602081101561010757600080fd5b50356001600160a01b03166102c6565b61011f6102a6565b6101735760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60015460408051600160e21b63158efc990281526001600160a01b038681166004830152858116602483015284811660448301529151919092169163563bf26491606480830192600092919082900301818387803b1580156101d457600080fd5b505af11580156101e8573d6000803e3d6000fd5b50505050505050565b6101f96102a6565b61024d5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6001546001600160a01b031681565b6102ce6102a6565b6103225760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61032b8161032e565b50565b6001600160a01b03811661037657604051600160e51b62461bcd0281526004018080602001828103825260268152602001806103d26026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a7230582066c840b24a8492e829fec80aa06fcf6fddceb3c18d9407e4e5604f9b773ac7e30029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063563bf26414610067578063715018a6146100a15780638da5cb5b146100a95780638f32d59b146100cd5780639e45e0d0146100e9578063f2fde38b146100f1575b600080fd5b61009f6004803603606081101561007d57600080fd5b506001600160a01b038135811691602081013582169160409091013516610117565b005b61009f6101f1565b6100b1610297565b604080516001600160a01b039092168252519081900360200190f35b6100d56102a6565b604080519115158252519081900360200190f35b6100b16102b7565b61009f6004803603602081101561010757600080fd5b50356001600160a01b03166102c6565b61011f6102a6565b6101735760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60015460408051600160e21b63158efc990281526001600160a01b038681166004830152858116602483015284811660448301529151919092169163563bf26491606480830192600092919082900301818387803b1580156101d457600080fd5b505af11580156101e8573d6000803e3d6000fd5b50505050505050565b6101f96102a6565b61024d5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6001546001600160a01b031681565b6102ce6102a6565b6103225760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61032b8161032e565b50565b6001600160a01b03811661037657604051600160e51b62461bcd0281526004018080602001828103825260268152602001806103d26026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a7230582066c840b24a8492e829fec80aa06fcf6fddceb3c18d9407e4e5604f9b773ac7e30029",
  "sourceMap": "295:397:5:-;;;385:108;8:9:-1;5:2;;;30:1;27;20:12;5:2;385:108:5;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;385:108:5;657:6:36;:19;;-1:-1:-1;;;;;;657:19:36;666:10;657:19;;;;691:40;;-1:-1:-1;;;;;724:6:36;;;;;657;691:40;;657:6;;691:40;450:16:5;:36;;-1:-1:-1;;;;;;450:36:5;-1:-1:-1;;;;;450:36:5;;;;;;;;;;295:397;;;-1:-1:-1;295:397:5;;",
  "deployedSourceMap": "295:397:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:397:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:191;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;499:191:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;1599:137:36;;;:::i;814:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;814:77:36;;;;;;;;;;;;;;1165:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;338:40:5;;;:::i;1885:107:36:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1885:107:36;-1:-1:-1;;;;;1885:107:36;;:::i;499:191:5:-;1018:9:36;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;;;1010:54:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:16:5;;:59;;;-1:-1:-1;;;;;624:59:5;;-1:-1:-1;;;;;624:59:5;;;;;;;;;;;;;;;;;;;;;;;:16;;;;;:22;;:59;;;;;:16;;:59;;;;;;;:16;;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;624:59:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;624:59:5;;;;499:191;;;:::o;1599:137:36:-;1018:9;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;;;1010:54:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1681:6;;1660:40;;-1:-1:-1;;;;;1681:6:36;;;;1660:40;;1697:1;;1660:40;1727:1;1710:19;;-1:-1:-1;;;;;;1710:19:36;;;1599:137::o;814:77::-;852:7;878:6;-1:-1:-1;;;;;878:6:36;814:77;:::o;1165:90::-;1205:4;1242:6;-1:-1:-1;;;;;1242:6:36;1228:10;:20;;1165:90::o;338:40:5:-;;;-1:-1:-1;;;;;338:40:5;;:::o;1885:107:36:-;1018:9;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;;;1010:54:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;2093:225::-;-1:-1:-1;;;;;2166:22:36;;2158:73;;;;-1:-1:-1;;;;;2158:73:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:6;;;2246:38;;-1:-1:-1;;;;;2246:38:36;;;;2267:6;;;2246:38;;;2294:6;:17;;-1:-1:-1;;;;;;2294:17:36;-1:-1:-1;;;;;2294:17:36;;;;;;;;;;2093:225::o",
  "source": "pragma solidity ^0.5.8;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"../DarknodeRegistry/DarknodeRegistry.sol\";\n\n/// @notice DarknodeSlasher will become a voting system for darknodes to\n/// deregister other misbehaving darknodes.\n/// Right now, it is a placeholder.\ncontract DarknodeSlasher is Ownable {\n\n    DarknodeRegistry public darknodeRegistry;\n\n    constructor(DarknodeRegistry _darknodeRegistry) public {\n        darknodeRegistry = _darknodeRegistry;\n    }\n\n    function slash(address _prover, address _challenger1, address _challenger2)\n        external\n        onlyOwner\n    {\n        darknodeRegistry.slash(_prover, _challenger1, _challenger2);\n    }\n}\n",
  "sourcePath": "/home/noah/github/renproject/darknode-sol/contracts/DarknodeSlasher/DarknodeSlasher.sol",
  "ast": {
    "absolutePath": "/home/noah/github/renproject/darknode-sol/contracts/DarknodeSlasher/DarknodeSlasher.sol",
    "exportedSymbols": {
      "DarknodeSlasher": [
        2721
      ]
    },
    "id": 2722,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2684,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2685,
        "nodeType": "ImportDirective",
        "scope": 2722,
        "sourceUnit": 7471,
        "src": "25:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/darknode-sol/contracts/DarknodeRegistry/DarknodeRegistry.sol",
        "file": "../DarknodeRegistry/DarknodeRegistry.sol",
        "id": 2686,
        "nodeType": "ImportDirective",
        "scope": 2722,
        "sourceUnit": 2391,
        "src": "90:50:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2687,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7470,
              "src": "323:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7470",
                "typeString": "contract Ownable"
              }
            },
            "id": 2688,
            "nodeType": "InheritanceSpecifier",
            "src": "323:7:5"
          }
        ],
        "contractDependencies": [
          7470
        ],
        "contractKind": "contract",
        "documentation": "@notice DarknodeSlasher will become a voting system for darknodes to\n deregister other misbehaving darknodes.\n Right now, it is a placeholder.",
        "fullyImplemented": true,
        "id": 2721,
        "linearizedBaseContracts": [
          2721,
          7470
        ],
        "name": "DarknodeSlasher",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2690,
            "name": "darknodeRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 2721,
            "src": "338:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
              "typeString": "contract DarknodeRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 2689,
              "name": "DarknodeRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2390,
              "src": "338:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                "typeString": "contract DarknodeRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2699,
              "nodeType": "Block",
              "src": "440:53:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2695,
                      "name": "darknodeRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2690,
                      "src": "450:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                        "typeString": "contract DarknodeRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2696,
                      "name": "_darknodeRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2692,
                      "src": "469:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                        "typeString": "contract DarknodeRegistry"
                      }
                    },
                    "src": "450:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                      "typeString": "contract DarknodeRegistry"
                    }
                  },
                  "id": 2698,
                  "nodeType": "ExpressionStatement",
                  "src": "450:36:5"
                }
              ]
            },
            "documentation": null,
            "id": 2700,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2692,
                  "name": "_darknodeRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2700,
                  "src": "397:34:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                    "typeString": "contract DarknodeRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2691,
                    "name": "DarknodeRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2390,
                    "src": "397:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                      "typeString": "contract DarknodeRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "396:36:5"
            },
            "returnParameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:5"
            },
            "scope": 2721,
            "src": "385:108:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2719,
              "nodeType": "Block",
              "src": "614:76:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2714,
                        "name": "_prover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2702,
                        "src": "647:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2715,
                        "name": "_challenger1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2704,
                        "src": "656:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2716,
                        "name": "_challenger2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2706,
                        "src": "670:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2711,
                        "name": "darknodeRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2690,
                        "src": "624:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                          "typeString": "contract DarknodeRegistry"
                        }
                      },
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1878,
                      "src": "624:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address) external"
                      }
                    },
                    "id": 2717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2718,
                  "nodeType": "ExpressionStatement",
                  "src": "624:59:5"
                }
              ]
            },
            "documentation": null,
            "id": 2720,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2709,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2708,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7403,
                  "src": "600:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "600:9:5"
              }
            ],
            "name": "slash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2702,
                  "name": "_prover",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "514:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2704,
                  "name": "_challenger1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "531:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2706,
                  "name": "_challenger2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "553:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "513:61:5"
            },
            "returnParameters": {
              "id": 2710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:0:5"
            },
            "scope": 2721,
            "src": "499:191:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2722,
        "src": "295:397:5"
      }
    ],
    "src": "0:693:5"
  },
  "legacyAST": {
    "absolutePath": "/home/noah/github/renproject/darknode-sol/contracts/DarknodeSlasher/DarknodeSlasher.sol",
    "exportedSymbols": {
      "DarknodeSlasher": [
        2721
      ]
    },
    "id": 2722,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2684,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2685,
        "nodeType": "ImportDirective",
        "scope": 2722,
        "sourceUnit": 7471,
        "src": "25:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/darknode-sol/contracts/DarknodeRegistry/DarknodeRegistry.sol",
        "file": "../DarknodeRegistry/DarknodeRegistry.sol",
        "id": 2686,
        "nodeType": "ImportDirective",
        "scope": 2722,
        "sourceUnit": 2391,
        "src": "90:50:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2687,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7470,
              "src": "323:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7470",
                "typeString": "contract Ownable"
              }
            },
            "id": 2688,
            "nodeType": "InheritanceSpecifier",
            "src": "323:7:5"
          }
        ],
        "contractDependencies": [
          7470
        ],
        "contractKind": "contract",
        "documentation": "@notice DarknodeSlasher will become a voting system for darknodes to\n deregister other misbehaving darknodes.\n Right now, it is a placeholder.",
        "fullyImplemented": true,
        "id": 2721,
        "linearizedBaseContracts": [
          2721,
          7470
        ],
        "name": "DarknodeSlasher",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2690,
            "name": "darknodeRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 2721,
            "src": "338:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
              "typeString": "contract DarknodeRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 2689,
              "name": "DarknodeRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2390,
              "src": "338:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                "typeString": "contract DarknodeRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2699,
              "nodeType": "Block",
              "src": "440:53:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2695,
                      "name": "darknodeRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2690,
                      "src": "450:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                        "typeString": "contract DarknodeRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2696,
                      "name": "_darknodeRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2692,
                      "src": "469:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                        "typeString": "contract DarknodeRegistry"
                      }
                    },
                    "src": "450:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                      "typeString": "contract DarknodeRegistry"
                    }
                  },
                  "id": 2698,
                  "nodeType": "ExpressionStatement",
                  "src": "450:36:5"
                }
              ]
            },
            "documentation": null,
            "id": 2700,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2692,
                  "name": "_darknodeRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2700,
                  "src": "397:34:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                    "typeString": "contract DarknodeRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2691,
                    "name": "DarknodeRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2390,
                    "src": "397:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                      "typeString": "contract DarknodeRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "396:36:5"
            },
            "returnParameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:5"
            },
            "scope": 2721,
            "src": "385:108:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2719,
              "nodeType": "Block",
              "src": "614:76:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2714,
                        "name": "_prover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2702,
                        "src": "647:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2715,
                        "name": "_challenger1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2704,
                        "src": "656:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2716,
                        "name": "_challenger2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2706,
                        "src": "670:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2711,
                        "name": "darknodeRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2690,
                        "src": "624:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DarknodeRegistry_$2390",
                          "typeString": "contract DarknodeRegistry"
                        }
                      },
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1878,
                      "src": "624:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address) external"
                      }
                    },
                    "id": 2717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2718,
                  "nodeType": "ExpressionStatement",
                  "src": "624:59:5"
                }
              ]
            },
            "documentation": null,
            "id": 2720,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2709,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2708,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7403,
                  "src": "600:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "600:9:5"
              }
            ],
            "name": "slash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2702,
                  "name": "_prover",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "514:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2704,
                  "name": "_challenger1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "531:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2706,
                  "name": "_challenger2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "553:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "513:61:5"
            },
            "returnParameters": {
              "id": 2710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:0:5"
            },
            "scope": 2721,
            "src": "499:191:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2722,
        "src": "295:397:5"
      }
    ],
    "src": "0:693:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xa6B1d1E63B92F8Fb36F8E1356FD5739e6433f0a3",
      "transactionHash": "0x36d36648554f3056e084eed942503903bb629b5bca08b6d809837e90bd8ad6d0"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-16T00:46:30.131Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {},
    "notice": "DarknodeSlasher will become a voting system for darknodes to deregister other misbehaving darknodes. Right now, it is a placeholder."
  }
}