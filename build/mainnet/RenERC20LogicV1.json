{
  "contractName": "RenERC20LogicV1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "LogRateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_rateScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "blacklistRecoverableToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeRateCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "fromUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "recoverTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nextRate",
          "type": "uint256"
        }
      ],
      "name": "setExchangeRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "toUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_nextOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialRate",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_version",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_version",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_nextOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_nextOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialRate",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"LogRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_rateScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"blacklistRecoverableToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"fromUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nextOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialRate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nextOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nextOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialRate\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nextRate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"toUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}}},\"userdoc\":{\"methods\":{\"burn(address,uint256)\":{\"notice\":\"burn can only be called by the tokens' associated Gateway contract. See Gateway's burn functions instead.\"},\"mint(address,uint256)\":{\"notice\":\"mint can only be called by the tokens' associated Gateway contract. See Gateway's mint function instead.\"},\"recoverTokens(address)\":{\"notice\":\"Allow the owner of the contract to recover funds accidentally sent to the contract. To withdraw ETH, the token should be set to `0x0`.\"}},\"notice\":\"RenERC20 represents a digital asset that has been bridged on to the Ethereum ledger. It exposes mint and burn functions that can only be called by it's associated Gateway contract.\"}},\"settings\":{\"compilationTarget\":{\"/home/noah/github/renproject/ren-sol/contracts/Gateway/RenERC20.sol\":\"RenERC20LogicV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/noah/github/renproject/ren-sol/contracts/Gateway/ERC20WithPermit.sol\":{\"keccak256\":\"0xa4c0b06513f9fa99bbeb39fcbbc3e35517f9ee4bd8cf6db45205dfec4e62ae71\",\"urls\":[\"bzz-raw://cc04fe646ecfeda4127fdc7744ec39c5025049cb5bc16cc7488553ad6b3f4bd4\",\"dweb:/ipfs/QmTsnkCkPG2JarLAEEz7APcDqCm3PH4XiVyGmQ9Fikbjkd\"]},\"/home/noah/github/renproject/ren-sol/contracts/Gateway/ERC20WithRate.sol\":{\"keccak256\":\"0x4870e431c2f7f49b22968521c5b34a57a0fca443061b9434d830e1279045aaac\",\"urls\":[\"bzz-raw://a941eba091d9a67acef14db387e27cdd7fe26ac6425b95ae6ed91a660dd362d3\",\"dweb:/ipfs/QmYMWQGsP1R45sMGrwKAo6n9Tw4ZLH3mZ9r1UCwU6KTTZm\"]},\"/home/noah/github/renproject/ren-sol/contracts/Gateway/RenERC20.sol\":{\"keccak256\":\"0x1b2d6815aec2c5214cb5fa1c924e414b48ed641bff20869a0e902cdc7e3cbe54\",\"urls\":[\"bzz-raw://7d70640ee5c192deeb5555ae13398bb54978bd5220836cc66d57266c589d4cc7\",\"dweb:/ipfs/Qmb63p72pmnzxy3zEbj9f5otrpyHLmoRuNfi3XhAkFuLHN\"]},\"/home/noah/github/renproject/ren-sol/contracts/Governance/Claimable.sol\":{\"keccak256\":\"0x489acf506024340525745cefc9d6ab94774cb5e1852e6d586fc38fa5fb893d71\",\"urls\":[\"bzz-raw://1813667beee7be9b3be81b5a3dd1018b7c68873f6df6b638205c829ea85d7de9\",\"dweb:/ipfs/QmRbtEhtPM4RYf9SP5UGTFAU8EJGuDE1eXJTJ34f7oEKXQ\"]},\"/home/noah/github/renproject/ren-sol/contracts/libraries/CanReclaimTokens.sol\":{\"keccak256\":\"0x2caeedb705b51e95e76c878508f9f213fbe440500475aaba55b29c2034e824a7\",\"urls\":[\"bzz-raw://70c26ee86a6786c63c589f10cc9101efc86292c960acec4f4b1df7bf728b00b3\",\"dweb:/ipfs/Qmb1Af9ai6T3VEU5BA7bDMFEszwKSvWXXKSge63gojxGrF\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1eee490bb6b1751e8d39e2670fa0d04dd2e8b7af6da33e1fb4c1593e771b56fb\",\"urls\":[\"bzz-raw://cf10c73acede242d453658d9b6edadab89de71b0818c7a3d35d732db62dfffb3\",\"dweb:/ipfs/QmcXcS2ZJpwwoJ5WQtPUn3Gg7zJadqvfCPUcGW14mmXfsC\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/upgrades/contracts/upgradeability/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xbf8ee1cf63a430a3eb8b39a9145d0d133400b8db06fa9fd33056597f7d8ceb25\",\"urls\":[\"bzz-raw://58dc9f7b607b235e9efae48b003bf43aacb1b034853b8ead82830834405904a6\",\"dweb:/ipfs/QmXqDDwV8vpufd6Xka5zYrxrSgbnfzrQTSMoN7dPTAHJ21\"]},\"@openzeppelin/upgrades/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x1b37f808dc0a45976ad23aa53908c485a74a4d9fbd03066a5ab399c46436e570\",\"urls\":[\"bzz-raw://de04959e1261bbc2ee53a88b98469a888a2f2fa49c07ea87a5d646a8fe438558\",\"dweb:/ipfs/QmUmYQaNnAMfvbfKLniFLHyBzsH77bCMf9NpNSfndfuqWh\"]},\"@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x91f2b663c89b940dce6dbd00f5e7bf326cdf02d1da4ddbcb7e64b313e60d9afc\",\"urls\":[\"bzz-raw://bb1c5b7a18d4ff807bff6ded8e8f61586a09157a87f87d6271078bf57762d7c9\",\"dweb:/ipfs/Qmdd9gNEAzHTEqJKgMzLNG1ib3L6a2S6pAhAT7RwZZWVSp\"]},\"@openzeppelin/upgrades/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0x6b84a0236a899ba5aa673ea34d5efa1f93dba461e13d8799f51a9f7b64b59f4f\",\"urls\":[\"bzz-raw://905fe46ff8aa3c8698677552833331543ac9ef9bcc2c444772af9c0d1441f994\",\"dweb:/ipfs/QmQda6SVGFNZQN5SrTQM2mf8oEgbFEaUhQpXetj9NmkfqV\"]},\"@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzz-raw://3a111e1dc777d80e6c2ad41c6ff2bfb3ae8f61658fd6580ddf9ba9ab0d25a354\",\"dweb:/ipfs/QmSfwvUqqiownzHeMmUiYkejWs6FXR2KLtHQnSzP6FivTj\"]},\"@openzeppelin/upgrades/contracts/upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0xb02c6349ba01df9902857b6058f92b37f13187775cce9da74f6f28410205445b\",\"urls\":[\"bzz-raw://f05434b5110c9de912e001a5dc2b252947f474346cb8ea5ec26ea2efe7143aa7\",\"dweb:/ipfs/QmbaksVa6vQz926TCHgJniKFuod44QhuGzVFYMtdUgdxba\"]},\"@openzeppelin/upgrades/contracts/utils/Address.sol\":{\"keccak256\":\"0x7be7f8e4c08bc70ff9815e3f11c569f42aa3c447b5bc61fd75fb5cec97f63a9f\",\"urls\":[\"bzz-raw://f301a9226d637e1593916ba2de7b0b28c35f2adc3ca8526289fe1eedafa83bc2\",\"dweb:/ipfs/QmPb991LE8nyvhB4BkX46P1Pan2ijH9tfqWwLAz65VUUKs\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "790:2163:10:-;;;;;;;;;",
  "deployedSourceMap": "790:2163:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;790:2163:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;739:81:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:149:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2577:149:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;927:459:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;927:459:19;-1:-1:-1;;;;;927:459:19;;:::i;:::-;;492:182:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:54;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:54;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:54;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:54;;;;;;;;-1:-1:-1;492:182:54;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:54;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:54;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:54;;-1:-1:-1;;;492:182:54;;;;;-1:-1:-1;492:182:54;;-1:-1:-1;492:182:54:i;1636:89:52:-;;;:::i;:::-;;;;;;;;;;;;;;;;2538:413:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2538:413:10;;;;;;;;;;;;;;;;;:::i;562:41:7:-;;;:::i;992:108:6:-;;;:::i;1567:81:54:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;804:31:6;;;:::i;3879:207:52:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3879:207:52;;;;;;;;:::i;1368:162:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1368:162:7;-1:-1:-1;;;;;1368:162:7;;:::i;1753:97:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1753:97:10;;;;;;;;:::i;952:128:15:-;;;:::i;1000:618:10:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1000:618:10;;;-1:-1:-1;;;;;1000:618:10;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1000:618:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1000:618:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1000:618:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1000:618:10;;;;;;;;-1:-1:-1;1000:618:10;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;1000:618:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1000:618:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1000:618:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1000:618:10;;;;;;;;-1:-1:-1;1000:618:10;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;1000:618:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1000:618:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1000:618:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1000:618:10;;-1:-1:-1;;;1000:618:10;;;;;-1:-1:-1;1000:618:10;;-1:-1:-1;1000:618:10:i;745:21:6:-;;;:::i;1107:663::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1107:663:6;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1107:663:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1107:663:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1107:663:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1107:663:6;;;;;;;;-1:-1:-1;1107:663:6;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;1107:663:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1107:663:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1107:663:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1107:663:6;;;;;;;;-1:-1:-1;1107:663:6;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;1107:663:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1107:663:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1107:663:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1107:663:6;;-1:-1:-1;;;1107:663:6;;;;;-1:-1:-1;1107:663:6;;-1:-1:-1;1107:663:6:i;1783:108:52:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1783:108:52;-1:-1:-1;;;;;1783:108:52;;:::i;1746:137:51:-;;;:::i;564:41:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;564:41:6;-1:-1:-1;;;;;564:41:6;;:::i;959:77:51:-;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:51;;;;;;;;;;;;;;1310:92;;;:::i;1812:1160:6:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;1812:1160:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;933:85:54:-;;;:::i;1986:101:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1986:101:10;;;;;;;;:::i;1669:177:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1669:177:7;;:::i;4573:258:52:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4573:258:52;;;;;;;;:::i;2093:439:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2093:439:10;;;;;;;;:::i;1028:167:7:-;;;:::i;522:108:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;522:108:19;-1:-1:-1;;;;;522:108:19;;:::i;739:180:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;739:180:7;;;;;;;;:::i;925:97::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;925:97:7;;:::i;2307:132:52:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2307:132:52;;;;;;;;;;:::i;387:27:15:-;;;:::i;1536:127:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1536:127:7;;:::i;712:234:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;712:234:15;-1:-1:-1;;;;;712:234:15;;:::i;636:126:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;636:126:19;-1:-1:-1;;;;;636:126:19;;:::i;739:81:54:-;808:5;801:12;;;;;;;;-1:-1:-1;;801:12:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:13;;801:12;;808:5;;801:12;;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;;:::o;2577:149:52:-;2643:4;2659:39;2668:12;:10;:12::i;:::-;2682:7;2691:6;2659:8;:39::i;:::-;-1:-1:-1;2715:4:52;2577:149;;;;;:::o;927:459:19:-;1163:9:51;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:51;;;;;;;;;;;;;;;-1:-1:-1;;;;;1017:34:19;;;;;;:26;:34;;;;;;;;1016:35;995:124;;;;-1:-1:-1;;;995:124:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:22:19;;1130:250;;1172:42;;:10;;1192:21;1172:42;;;;;;;;;1192:21;1172:10;:42;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1172:42:19;1130:250;;;1317:38;;;-1:-1:-1;;;1317:38:19;;1349:4;1317:38;;;;;;1245:124;;1289:10;;-1:-1:-1;;;;;1317:23:19;;;;;:38;;;;;;;;;;;;;;:23;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1317:38:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1317:38:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1317:38:19;-1:-1:-1;;;;;1245:26:19;;;:124;;:26;:124;:::i;:::-;927:459;:::o;492:182:54:-;1024:12:59;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:59;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:59;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:54;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:54;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:54;:20;;-1:-1:-1;;647:20:54;;;;;;;1264:55:59;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:59;;;1264:55;492:182:54;;;;:::o;1636:89:52:-;1706:12;;1636:89;:::o;2538:413:10:-;2643:4;-1:-1:-1;;;;;2789:26:10;;2810:4;2789:26;;2768:114;;;;-1:-1:-1;;;2768:114:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2899:45;2918:6;2926:9;2937:6;2899:18;:45::i;:::-;2892:52;2538:413;-1:-1:-1;;;;2538:413:10:o;562:41:7:-;599:4;562:41;:::o;992:108:6:-;1034:66;992:108;:::o;1567:81:54:-;1632:9;;;;1567:81;:::o;804:31:6:-;;;;:::o;3879:207:52:-;3959:4;3975:83;3984:12;:10;:12::i;:::-;3998:7;4007:50;4046:10;4007:11;:25;4019:12;:10;:12::i;:::-;-1:-1:-1;;;;;4007:25:52;;;;;;;;;;;;;;;;;-1:-1:-1;4007:25:52;;;:34;;;;;;;;;;;:50;:38;:50;:::i;:::-;3975:8;:83::i;1368:162:7:-;1460:7;1490:33;1503:19;1513:8;1503:9;:19::i;:::-;1490:12;:33::i;1753:97:10:-;1163:9:51;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:51;;;;;;;;;;;;;;;1824:19:10;1830:3;1835:7;1824:5;:19::i;:::-;1753:97;;:::o;952:128:15:-;608:12;;-1:-1:-1;;;;;608:12:15;592;:10;:12::i;:::-;-1:-1:-1;;;;;592:28:15;;571:117;;;;-1:-1:-1;;;571:117:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:12;;1012:32;;-1:-1:-1;;;;;1031:12:15;1012:18;:32::i;:::-;1061:12;1054:19;;-1:-1:-1;;;;;;1054:19:15;;;952:128::o;1000:618:10:-;1024:12:59;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:59;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:59;;;;;1225:18;1213:4;1225:18;;;1170:80;1256:51:10;1281:5;1288:7;1297:9;1256:24;:51::i;:::-;1317:50;1342:10;1354:12;1317:24;:50::i;:::-;1377:143;1417:8;1439;1461:5;1480:7;1501:9;1377:26;:143::i;:::-;1530:32;1551:10;1530:20;:32::i;:::-;1572:39;1600:10;1572:27;:39::i;:::-;1268:14:59;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:59;;;1264:55;1000:618:10;;;;;;;;:::o;745:21:6:-;;;;;;;;;;;;;;;-1:-1:-1;;745:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1107:663::-;1024:12:59;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:59;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:59;;;;;1225:18;1213:4;1225:18;;;1170:80;1305:51:6;1330:5;1337:7;1346:9;1305:24;:51::i;:::-;1366:18;;;;:7;;:18;;;;;:::i;:::-;-1:-1:-1;1464:133:6;;;;;;;;;;;;;;;;;;1631:6;:4;:6::i;:::-;1615:24;;;;;;1673:7;1657:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1657:25:6;;;;;;;;;1436:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:4;1436:317;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1436:317:6;;;;;;;-1:-1:-1;;1413:350:6;;;;;1394:16;:369;1264:55:59;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:59;;;1264:55;1107:663:6;;;;;;:::o;1783:108:52:-;-1:-1:-1;;;;;1866:18:52;1840:7;1866:18;;;:9;:18;;;;;;;1783:108::o;1746:137:51:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:51;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:51;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:51;;;1746:137::o;564:41:6:-;;;;;;;;;;;;;:::o;959:77:51:-;1023:6;;-1:-1:-1;;;;;1023:6:51;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:51;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:51;;1366:29;;1310:92;:::o;1812:1160:6:-;2128:16;;2193:234;;;1034:66;2193:234;;;;;;;;-1:-1:-1;;;;;2193:234:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2193:234:6;;;;;2162:283;;;;;;-1:-1:-1;;;2066:393:6;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2066:393:6;;;;;;;2043:426;;;;;;;;;;;2480:71;;;;-1:-1:-1;;;2480:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2592:26:6;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2592:26:6;;;;;;;;-1:-1:-1;;;;;2582:36:6;:6;-1:-1:-1;;;;;2582:36:6;;2561:115;;;;;-1:-1:-1;;;2561:115:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2707:11;;;:28;;;2729:6;2722:3;:13;;2707:28;2686:108;;;;-1:-1:-1;;;2686:108:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2821:14:6;;;;;;:6;:14;;;;;:16;;;;;;;;2812:25;;2804:66;;;;;-1:-1:-1;;;2804:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:14;2897:7;:25;;2921:1;2897:25;;;-1:-1:-1;;2897:25:6;2880:42;;2932:33;2941:6;2949:7;2958:6;2932:8;:33::i;:::-;1812:1160;;;;;;;;;;:::o;933:85:54:-;1004:7;997:14;;;;;;;;-1:-1:-1;;997:14:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:13;;997:14;;1004:7;;997:14;;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;1986:101:10;1163:9:51;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:51;;;;;;;;;;;;;;;2059:21:10;2065:5;2072:7;2059:5;:21::i;1669:177:7:-;1833:5;;1765:7;;1795:44;;:33;:17;599:4;1795:33;:21;:33;:::i;:::-;:37;:44;:37;:44;:::i;4573:258:52:-;4658:4;4674:129;4683:12;:10;:12::i;:::-;4697:7;4706:96;4745:15;4706:96;;;;;;;;;;;;;;;;;:11;:25;4718:12;:10;:12::i;:::-;-1:-1:-1;;;;;4706:25:52;;;;;;;;;;;;;;;;;-1:-1:-1;4706:25:52;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2093:439:10:-;2162:4;-1:-1:-1;;;;;2382:26:10;;2403:4;2382:26;;2361:114;;;;-1:-1:-1;;;2361:114:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2492:33;2507:9;2518:6;2492:14;:33::i;:::-;2485:40;2093:439;-1:-1:-1;;;2093:439:10:o;1028:167:7:-;1080:7;1107:5;;1116:1;1107:10;;1099:67;;;;-1:-1:-1;;;1099:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1183:5:7;;1028:167;:::o;522:108:19:-;1024:12:59;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:59;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:59;;;;;1225:18;1213:4;1225:18;;;1170:80;591:32:19;612:10;591:20;:32::i;:::-;1268:14:59;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:59;;;522:108:19;;:::o;739:180:7:-;1024:12:59;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:59;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:59;;;;;1225:18;1213:4;1225:18;;;1170:80;850:30:7;869:10;850:18;:30::i;:::-;890:22;899:12;890:8;:22::i;:::-;1268:14:59;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:59;;;1264:55;739:180:7;;;:::o;925:97::-;1163:9:51;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:51;;;;;;;;;;;;;;;996:19:7;1005:9;996:8;:19::i;2307:132:52:-;-1:-1:-1;;;;;2405:18:52;;;2379:7;2405:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2307:132::o;387:27:15:-;;;-1:-1:-1;;;;;387:27:15;;:::o;1536:127:7:-;1596:7;1622:34;599:4;1622:18;1634:5;;1622:7;:11;;:18;;;;:::i;712:234:15:-;1163:9:51;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:51;;;;;;;;;;;;;;;817:7:15;:5;:7::i;:::-;-1:-1:-1;;;;;805:19:15;:8;-1:-1:-1;;;;;805:19:15;;;:47;;;;-1:-1:-1;840:12:15;;-1:-1:-1;;;;;828:24:15;;;840:12;;828:24;;805:47;784:122;;;;;-1:-1:-1;;;784:122:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:12;:23;;-1:-1:-1;;;;;;916:23:15;-1:-1:-1;;;;;916:23:15;;;;;;;;;;712:234::o;636:126:19:-;1163:9:51;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:51;;;;;;;;;;;;;;;-1:-1:-1;;;;;714:34:19;;;;;:26;:34;;;;;:41;;-1:-1:-1;;714:41:19;751:4;714:41;;;636:126::o;867:96:41:-;946:10;867:96;:::o;7428:332:52:-;-1:-1:-1;;;;;7521:19:52;;7513:68;;;;-1:-1:-1;;;7513:68:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7599:21:52;;7591:68;;;;-1:-1:-1;;;7591:68:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7670:18:52;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7721:32;;;;;;;;;;;;;;;;;7428:332;;;:::o;662:174:57:-;770:58;;;-1:-1:-1;;;;;770:58:57;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:57;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:57;;763:5;;744:18;:85::i;1409:498:59:-;1820:4;1864:17;1895:7;1409:498;:::o;3184:300:52:-;3273:4;3289:36;3299:6;3307:9;3318:6;3289:9;:36::i;:::-;3335:121;3344:6;3352:12;:10;:12::i;:::-;3366:89;3404:6;3366:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3366:19:52;;;;;;:11;:19;;;;;;3386:12;:10;:12::i;:::-;-1:-1:-1;;;;;3366:33:52;;;;;;;;;;;;-1:-1:-1;3366:33:52;;;:89;;:37;:89;:::i;3335:121::-;-1:-1:-1;3473:4:52;3184:300;;;;;:::o;834:176:50:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:50;;;;;;;;;;;;;;;;;;;;;;;;;;;6039:302:52;-1:-1:-1;;;;;6114:21:52;;6106:65;;;;;-1:-1:-1;;;6106:65:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:12;;:24;;6214:6;6197:24;:16;:24;:::i;:::-;6182:12;:39;-1:-1:-1;;;;;6252:18:52;;;;;;:9;:18;;;;;;:30;;6275:6;6252:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6231:18:52;;;;;;:9;:18;;;;;;;;:51;;;;6297:37;;;;;;;6231:18;;;;6297:37;;;;;;;;;;6039:302;;:::o;2240:225:51:-;-1:-1:-1;;;;;2313:22:51;;2305:73;;;;-1:-1:-1;;;2305:73:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:51;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:51;-1:-1:-1;;;;;2441:17:51;;;;;;;;;;2240:225::o;421:106:15:-;1024:12:59;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:59;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:59;;;;;1225:18;1213:4;1225:18;;;1170:80;490:30:15;509:10;490:18;:30::i;6661:342:52:-;-1:-1:-1;;;;;6736:21:52;;6728:67;;;;-1:-1:-1;;;6728:67:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6827:68;6850:6;6827:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6827:18:52;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6806:18:52;;;;;;:9;:18;;;;;:89;6920:12;;:24;;6937:6;6920:24;:16;:24;:::i;:::-;6905:12;:39;6959:37;;;;;;;;6985:1;;-1:-1:-1;;;;;6959:37:52;;;;;;;;;;;;6661:342;;:::o;2159:459:50:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:50;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;1732:187::-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:50;;;1732:187::o;2094:155:52:-;2163:4;2179:42;2189:12;:10;:12::i;:::-;2203:9;2214:6;2179:9;:42::i;741:142:51:-;1024:12:59;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:59;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:59;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:51;:15;;-1:-1:-1;;;;;;806:15:51;-1:-1:-1;;;;;806:15:51;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:51;;-1:-1:-1;;836:40:51;1268:14:59;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:59;;;741:142:51;;:::o;1201:161:7:-;1277:1;1265:9;:13;1257:71;;;;-1:-1:-1;;;1257:71:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:5;:17;1201:161::o;2666:1095:57:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:57;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:57;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:57;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:57;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:57;3659:85;;;;-1:-1:-1;;;3659:85:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5305:464:52;-1:-1:-1;;;;;5402:20:52;;5394:70;;;;-1:-1:-1;;;5394:70:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:23:52;;5474:71;;;;-1:-1:-1;;;5474:71:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576;5598:6;5576:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:17:52;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5556:17:52;;;;;;;:9;:17;;;;;;:91;;;;5680:20;;;;;;;:32;;5705:6;5680:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5657:20:52;;;;;;;:9;:20;;;;;;;;;:55;;;;5727:35;;;;;;;5657:20;;5727:35;;;;;;;;;;;;;5305:464;;;:::o;1274:134:50:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:50;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:50:o;557:797:58:-;617:4;1265:20;;1110:66;1304:15;;;;;:42;;-1:-1:-1;1323:23:58;;;1296:51;-1:-1:-1;;557:797:58:o;790:2163:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:2163:10;;;-1:-1:-1;790:2163:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.16;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\n\nimport \"../Governance/Claimable.sol\";\nimport \"../libraries/CanReclaimTokens.sol\";\nimport \"./ERC20WithRate.sol\";\nimport \"./ERC20WithPermit.sol\";\n\n/// @notice RenERC20 represents a digital asset that has been bridged on to\n/// the Ethereum ledger. It exposes mint and burn functions that can only be\n/// called by it's associated Gateway contract.\ncontract RenERC20LogicV1 is\n    Initializable,\n    ERC20,\n    ERC20Detailed,\n    ERC20WithRate,\n    ERC20WithPermit,\n    Claimable,\n    CanReclaimTokens\n{\n    /* solium-disable-next-line no-empty-blocks */\n    function initialize(\n        uint256 _chainId,\n        address _nextOwner,\n        uint256 _initialRate,\n        string memory _version,\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) public initializer {\n        ERC20Detailed.initialize(_name, _symbol, _decimals);\n        ERC20WithRate.initialize(_nextOwner, _initialRate);\n        ERC20WithPermit.initialize(\n            _chainId,\n            _version,\n            _name,\n            _symbol,\n            _decimals\n        );\n        Claimable.initialize(_nextOwner);\n        CanReclaimTokens.initialize(_nextOwner);\n    }\n\n    /// @notice mint can only be called by the tokens' associated Gateway\n    /// contract. See Gateway's mint function instead.\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n    }\n\n    /// @notice burn can only be called by the tokens' associated Gateway\n    /// contract. See Gateway's burn functions instead.\n    function burn(address _from, uint256 _amount) public onlyOwner {\n        _burn(_from, _amount);\n    }\n\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        // Disallow sending tokens to the ERC20 contract address - a common\n        // mistake caused by the Ethereum transaction's `to` needing to be\n        // the token's address.\n        require(\n            recipient != address(this),\n            \"RenERC20: can't transfer to token address\"\n        );\n        return super.transfer(recipient, amount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount)\n        public\n        returns (bool)\n    {\n        // Disallow sending tokens to the ERC20 contract address (see comment\n        // in `transfer`).\n        require(\n            recipient != address(this),\n            \"RenERC20: can't transfer to token address\"\n        );\n        return super.transferFrom(sender, recipient, amount);\n    }\n}\n\n/* solium-disable-next-line no-empty-blocks */\n// contract RenERC20Proxy is InitializableAdminUpgradeabilityProxy {}\n\n/// @dev The following are not necessary for deploying renBTC or renZEC contracts,\n/// but are used to track deployments.\n\n/* solium-disable-next-line no-empty-blocks */\ncontract RenBTC is InitializableAdminUpgradeabilityProxy {}\n\n/* solium-disable-next-line no-empty-blocks */\ncontract RenZEC is InitializableAdminUpgradeabilityProxy {}\n\n/* solium-disable-next-line no-empty-blocks */\ncontract RenBCH is InitializableAdminUpgradeabilityProxy {}\n",
  "sourcePath": "/home/noah/github/renproject/ren-sol/contracts/Gateway/RenERC20.sol",
  "ast": {
    "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Gateway/RenERC20.sol",
    "exportedSymbols": {
      "RenBCH": [
        4846
      ],
      "RenBTC": [
        4840
      ],
      "RenERC20LogicV1": [
        4837
      ],
      "RenZEC": [
        4843
      ]
    },
    "id": 4847,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4673,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 4674,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 10769,
        "src": "25:82:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol",
        "file": "@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol",
        "id": 4675,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 12261,
        "src": "108:99:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 4676,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 11845,
        "src": "208:60:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "id": 4677,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 11181,
        "src": "269:82:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 4678,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 11289,
        "src": "352:90:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Governance/Claimable.sol",
        "file": "../Governance/Claimable.sol",
        "id": 4679,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 5499,
        "src": "444:37:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/libraries/CanReclaimTokens.sol",
        "file": "../libraries/CanReclaimTokens.sol",
        "id": 4680,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 5955,
        "src": "482:43:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Gateway/ERC20WithRate.sol",
        "file": "./ERC20WithRate.sol",
        "id": 4681,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 3715,
        "src": "526:29:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Gateway/ERC20WithPermit.sol",
        "file": "./ERC20WithPermit.sol",
        "id": 4682,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 3580,
        "src": "556:31:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4683,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11844,
              "src": "822:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$11844",
                "typeString": "contract Initializable"
              }
            },
            "id": 4684,
            "nodeType": "InheritanceSpecifier",
            "src": "822:13:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4685,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11180,
              "src": "841:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11180",
                "typeString": "contract ERC20"
              }
            },
            "id": 4686,
            "nodeType": "InheritanceSpecifier",
            "src": "841:5:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4687,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11288,
              "src": "852:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$11288",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 4688,
            "nodeType": "InheritanceSpecifier",
            "src": "852:13:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4689,
              "name": "ERC20WithRate",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3714,
              "src": "871:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20WithRate_$3714",
                "typeString": "contract ERC20WithRate"
              }
            },
            "id": 4690,
            "nodeType": "InheritanceSpecifier",
            "src": "871:13:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4691,
              "name": "ERC20WithPermit",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3579,
              "src": "890:15:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20WithPermit_$3579",
                "typeString": "contract ERC20WithPermit"
              }
            },
            "id": 4692,
            "nodeType": "InheritanceSpecifier",
            "src": "890:15:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4693,
              "name": "Claimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5498,
              "src": "911:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Claimable_$5498",
                "typeString": "contract Claimable"
              }
            },
            "id": 4694,
            "nodeType": "InheritanceSpecifier",
            "src": "911:9:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4695,
              "name": "CanReclaimTokens",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5954,
              "src": "926:16:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CanReclaimTokens_$5954",
                "typeString": "contract CanReclaimTokens"
              }
            },
            "id": 4696,
            "nodeType": "InheritanceSpecifier",
            "src": "926:16:10"
          }
        ],
        "contractDependencies": [
          3579,
          3714,
          5498,
          5954,
          9337,
          10768,
          11180,
          11288,
          11480,
          11844
        ],
        "contractKind": "contract",
        "documentation": "@notice RenERC20 represents a digital asset that has been bridged on to\n the Ethereum ledger. It exposes mint and burn functions that can only be\n called by it's associated Gateway contract.",
        "fullyImplemented": true,
        "id": 4837,
        "linearizedBaseContracts": [
          4837,
          5954,
          5498,
          3579,
          3714,
          11288,
          11180,
          11480,
          10768,
          9337,
          11844
        ],
        "name": "RenERC20LogicV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4752,
              "nodeType": "Block",
              "src": "1246:372:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4718,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4706,
                        "src": "1281:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4719,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4708,
                        "src": "1288:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4720,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "1297:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4715,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11288,
                        "src": "1256:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$11288_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 4717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11259,
                      "src": "1256:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 4721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1256:51:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4722,
                  "nodeType": "ExpressionStatement",
                  "src": "1256:51:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4726,
                        "name": "_nextOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4700,
                        "src": "1342:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4727,
                        "name": "_initialRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4702,
                        "src": "1354:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4723,
                        "name": "ERC20WithRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3714,
                        "src": "1317:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20WithRate_$3714_$",
                          "typeString": "type(contract ERC20WithRate)"
                        }
                      },
                      "id": 4725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3623,
                      "src": "1317:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4729,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:50:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4733,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4698,
                        "src": "1417:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4734,
                        "name": "_version",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4704,
                        "src": "1439:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4735,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4706,
                        "src": "1461:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4736,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4708,
                        "src": "1480:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4737,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "1501:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4730,
                        "name": "ERC20WithPermit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3579,
                        "src": "1377:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20WithPermit_$3579_$",
                          "typeString": "type(contract ERC20WithPermit)"
                        }
                      },
                      "id": 4732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3479,
                      "src": "1377:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory,string memory,uint8)"
                      }
                    },
                    "id": 4738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:143:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4739,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:143:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4743,
                        "name": "_nextOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4700,
                        "src": "1551:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4740,
                        "name": "Claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5498,
                        "src": "1530:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Claimable_$5498_$",
                          "typeString": "type(contract Claimable)"
                        }
                      },
                      "id": 4742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5448,
                      "src": "1530:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4745,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:32:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4749,
                        "name": "_nextOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4700,
                        "src": "1600:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4746,
                        "name": "CanReclaimTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5954,
                        "src": "1572:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CanReclaimTokens_$5954_$",
                          "typeString": "type(contract CanReclaimTokens)"
                        }
                      },
                      "id": 4748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5888,
                      "src": "1572:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4751,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:39:10"
                }
              ]
            },
            "documentation": null,
            "id": 4753,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4713,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4712,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11819,
                  "src": "1234:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1234:11:10"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4698,
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1029:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4700,
                  "name": "_nextOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1055:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4702,
                  "name": "_initialRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1083:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4704,
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1113:22:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4703,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4706,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1145:19:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4705,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4708,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1174:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4707,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4710,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1205:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4709,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1019:207:10"
            },
            "returnParameters": {
              "id": 4714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:10"
            },
            "scope": 4837,
            "src": "1000:618:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4767,
              "nodeType": "Block",
              "src": "1814:36:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4763,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4755,
                        "src": "1830:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4764,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4757,
                        "src": "1835:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4762,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11060,
                      "src": "1824:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4766,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:19:10"
                }
              ]
            },
            "documentation": "@notice mint can only be called by the tokens' associated Gateway\n contract. See Gateway's mint function instead.",
            "id": 4768,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4760,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4759,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10697,
                  "src": "1804:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1804:9:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4755,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "1767:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4757,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "1780:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1766:30:10"
            },
            "returnParameters": {
              "id": 4761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:0:10"
            },
            "scope": 4837,
            "src": "1753:97:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4782,
              "nodeType": "Block",
              "src": "2049:38:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4778,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4770,
                        "src": "2065:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4779,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4772,
                        "src": "2072:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4777,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11104,
                      "src": "2059:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2059:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4781,
                  "nodeType": "ExpressionStatement",
                  "src": "2059:21:10"
                }
              ]
            },
            "documentation": "@notice burn can only be called by the tokens' associated Gateway\n contract. See Gateway's burn functions instead.",
            "id": 4783,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4775,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4774,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10697,
                  "src": "2039:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2039:9:10"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4770,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4783,
                  "src": "2000:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4772,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4783,
                  "src": "2015:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1999:32:10"
            },
            "returnParameters": {
              "id": 4776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2049:0:10"
            },
            "scope": 4837,
            "src": "1986:101:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4807,
              "nodeType": "Block",
              "src": "2168:364:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4793,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4785,
                          "src": "2382:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4795,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12662,
                              "src": "2403:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RenERC20LogicV1_$4837",
                                "typeString": "contract RenERC20LogicV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RenERC20LogicV1_$4837",
                                "typeString": "contract RenERC20LogicV1"
                              }
                            ],
                            "id": 4794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2395:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2395:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2382:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656e45524332303a2063616e2774207472616e7366657220746f20746f6b656e2061646472657373",
                        "id": 4798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2422:43:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c21047359edf7a14a0d4ccb635b2bfbe189d27817636aadcaa0595670fef9849",
                          "typeString": "literal_string \"RenERC20: can't transfer to token address\""
                        },
                        "value": "RenERC20: can't transfer to token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c21047359edf7a14a0d4ccb635b2bfbe189d27817636aadcaa0595670fef9849",
                          "typeString": "literal_string \"RenERC20: can't transfer to token address\""
                        }
                      ],
                      "id": 4792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12565,
                        12566
                      ],
                      "referencedDeclaration": 12566,
                      "src": "2361:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:114:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4800,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:114:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4803,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4785,
                        "src": "2507:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4804,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4787,
                        "src": "2518:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4801,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12663,
                        "src": "2492:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RenERC20LogicV1_$4837",
                          "typeString": "contract super RenERC20LogicV1"
                        }
                      },
                      "id": 4802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10834,
                      "src": "2492:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 4805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2492:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4791,
                  "id": 4806,
                  "nodeType": "Return",
                  "src": "2485:40:10"
                }
              ]
            },
            "documentation": null,
            "id": 4808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4785,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4808,
                  "src": "2111:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2111:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4787,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4808,
                  "src": "2130:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2110:35:10"
            },
            "returnParameters": {
              "id": 4791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4790,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4808,
                  "src": "2162:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4789,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2162:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2161:6:10"
            },
            "scope": 4837,
            "src": "2093:439:10",
            "stateMutability": "nonpayable",
            "superFunction": 10834,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4835,
              "nodeType": "Block",
              "src": "2653:298:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4820,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4812,
                          "src": "2789:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4822,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12662,
                              "src": "2810:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RenERC20LogicV1_$4837",
                                "typeString": "contract RenERC20LogicV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RenERC20LogicV1_$4837",
                                "typeString": "contract RenERC20LogicV1"
                              }
                            ],
                            "id": 4821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2802:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2802:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2789:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656e45524332303a2063616e2774207472616e7366657220746f20746f6b656e2061646472657373",
                        "id": 4825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2829:43:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c21047359edf7a14a0d4ccb635b2bfbe189d27817636aadcaa0595670fef9849",
                          "typeString": "literal_string \"RenERC20: can't transfer to token address\""
                        },
                        "value": "RenERC20: can't transfer to token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c21047359edf7a14a0d4ccb635b2bfbe189d27817636aadcaa0595670fef9849",
                          "typeString": "literal_string \"RenERC20: can't transfer to token address\""
                        }
                      ],
                      "id": 4819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12565,
                        12566
                      ],
                      "referencedDeclaration": 12566,
                      "src": "2768:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:114:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4827,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:114:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4830,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4810,
                        "src": "2918:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4831,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4812,
                        "src": "2926:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4832,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4814,
                        "src": "2937:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4828,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12663,
                        "src": "2899:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RenERC20LogicV1_$4837",
                          "typeString": "contract super RenERC20LogicV1"
                        }
                      },
                      "id": 4829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10905,
                      "src": "2899:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:45:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4818,
                  "id": 4834,
                  "nodeType": "Return",
                  "src": "2892:52:10"
                }
              ]
            },
            "documentation": null,
            "id": 4836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4810,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "2560:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4812,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "2576:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2576:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4814,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "2595:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2559:51:10"
            },
            "returnParameters": {
              "id": 4818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4817,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "2643:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4816,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2643:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2642:6:10"
            },
            "scope": 4837,
            "src": "2538:413:10",
            "stateMutability": "nonpayable",
            "superFunction": 10905,
            "visibility": "public"
          }
        ],
        "scope": 4847,
        "src": "790:2163:10"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4838,
              "name": "InitializableAdminUpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12260,
              "src": "3262:37:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InitializableAdminUpgradeabilityProxy_$12260",
                "typeString": "contract InitializableAdminUpgradeabilityProxy"
              }
            },
            "id": 4839,
            "nodeType": "InheritanceSpecifier",
            "src": "3262:37:10"
          }
        ],
        "contractDependencies": [
          12149,
          12207,
          12260,
          12318,
          12356
        ],
        "contractKind": "contract",
        "documentation": "@dev The following are not necessary for deploying renBTC or renZEC contracts,\n but are used to track deployments.",
        "fullyImplemented": true,
        "id": 4840,
        "linearizedBaseContracts": [
          4840,
          12260,
          12318,
          12149,
          12207,
          12356
        ],
        "name": "RenBTC",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4847,
        "src": "3243:59:10"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4841,
              "name": "InitializableAdminUpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12260,
              "src": "3370:37:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InitializableAdminUpgradeabilityProxy_$12260",
                "typeString": "contract InitializableAdminUpgradeabilityProxy"
              }
            },
            "id": 4842,
            "nodeType": "InheritanceSpecifier",
            "src": "3370:37:10"
          }
        ],
        "contractDependencies": [
          12149,
          12207,
          12260,
          12318,
          12356
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4843,
        "linearizedBaseContracts": [
          4843,
          12260,
          12318,
          12149,
          12207,
          12356
        ],
        "name": "RenZEC",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4847,
        "src": "3351:59:10"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4844,
              "name": "InitializableAdminUpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12260,
              "src": "3478:37:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InitializableAdminUpgradeabilityProxy_$12260",
                "typeString": "contract InitializableAdminUpgradeabilityProxy"
              }
            },
            "id": 4845,
            "nodeType": "InheritanceSpecifier",
            "src": "3478:37:10"
          }
        ],
        "contractDependencies": [
          12149,
          12207,
          12260,
          12318,
          12356
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4846,
        "linearizedBaseContracts": [
          4846,
          12260,
          12318,
          12149,
          12207,
          12356
        ],
        "name": "RenBCH",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4847,
        "src": "3459:59:10"
      }
    ],
    "src": "0:3519:10"
  },
  "legacyAST": {
    "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Gateway/RenERC20.sol",
    "exportedSymbols": {
      "RenBCH": [
        4846
      ],
      "RenBTC": [
        4840
      ],
      "RenERC20LogicV1": [
        4837
      ],
      "RenZEC": [
        4843
      ]
    },
    "id": 4847,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4673,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 4674,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 10769,
        "src": "25:82:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol",
        "file": "@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol",
        "id": 4675,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 12261,
        "src": "108:99:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 4676,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 11845,
        "src": "208:60:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "id": 4677,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 11181,
        "src": "269:82:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 4678,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 11289,
        "src": "352:90:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Governance/Claimable.sol",
        "file": "../Governance/Claimable.sol",
        "id": 4679,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 5499,
        "src": "444:37:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/libraries/CanReclaimTokens.sol",
        "file": "../libraries/CanReclaimTokens.sol",
        "id": 4680,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 5955,
        "src": "482:43:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Gateway/ERC20WithRate.sol",
        "file": "./ERC20WithRate.sol",
        "id": 4681,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 3715,
        "src": "526:29:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Gateway/ERC20WithPermit.sol",
        "file": "./ERC20WithPermit.sol",
        "id": 4682,
        "nodeType": "ImportDirective",
        "scope": 4847,
        "sourceUnit": 3580,
        "src": "556:31:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4683,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11844,
              "src": "822:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$11844",
                "typeString": "contract Initializable"
              }
            },
            "id": 4684,
            "nodeType": "InheritanceSpecifier",
            "src": "822:13:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4685,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11180,
              "src": "841:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11180",
                "typeString": "contract ERC20"
              }
            },
            "id": 4686,
            "nodeType": "InheritanceSpecifier",
            "src": "841:5:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4687,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11288,
              "src": "852:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$11288",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 4688,
            "nodeType": "InheritanceSpecifier",
            "src": "852:13:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4689,
              "name": "ERC20WithRate",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3714,
              "src": "871:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20WithRate_$3714",
                "typeString": "contract ERC20WithRate"
              }
            },
            "id": 4690,
            "nodeType": "InheritanceSpecifier",
            "src": "871:13:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4691,
              "name": "ERC20WithPermit",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3579,
              "src": "890:15:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20WithPermit_$3579",
                "typeString": "contract ERC20WithPermit"
              }
            },
            "id": 4692,
            "nodeType": "InheritanceSpecifier",
            "src": "890:15:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4693,
              "name": "Claimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5498,
              "src": "911:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Claimable_$5498",
                "typeString": "contract Claimable"
              }
            },
            "id": 4694,
            "nodeType": "InheritanceSpecifier",
            "src": "911:9:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4695,
              "name": "CanReclaimTokens",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5954,
              "src": "926:16:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CanReclaimTokens_$5954",
                "typeString": "contract CanReclaimTokens"
              }
            },
            "id": 4696,
            "nodeType": "InheritanceSpecifier",
            "src": "926:16:10"
          }
        ],
        "contractDependencies": [
          3579,
          3714,
          5498,
          5954,
          9337,
          10768,
          11180,
          11288,
          11480,
          11844
        ],
        "contractKind": "contract",
        "documentation": "@notice RenERC20 represents a digital asset that has been bridged on to\n the Ethereum ledger. It exposes mint and burn functions that can only be\n called by it's associated Gateway contract.",
        "fullyImplemented": true,
        "id": 4837,
        "linearizedBaseContracts": [
          4837,
          5954,
          5498,
          3579,
          3714,
          11288,
          11180,
          11480,
          10768,
          9337,
          11844
        ],
        "name": "RenERC20LogicV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4752,
              "nodeType": "Block",
              "src": "1246:372:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4718,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4706,
                        "src": "1281:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4719,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4708,
                        "src": "1288:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4720,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "1297:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4715,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11288,
                        "src": "1256:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$11288_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 4717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11259,
                      "src": "1256:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 4721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1256:51:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4722,
                  "nodeType": "ExpressionStatement",
                  "src": "1256:51:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4726,
                        "name": "_nextOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4700,
                        "src": "1342:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4727,
                        "name": "_initialRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4702,
                        "src": "1354:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4723,
                        "name": "ERC20WithRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3714,
                        "src": "1317:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20WithRate_$3714_$",
                          "typeString": "type(contract ERC20WithRate)"
                        }
                      },
                      "id": 4725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3623,
                      "src": "1317:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4729,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:50:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4733,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4698,
                        "src": "1417:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4734,
                        "name": "_version",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4704,
                        "src": "1439:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4735,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4706,
                        "src": "1461:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4736,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4708,
                        "src": "1480:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4737,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "1501:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4730,
                        "name": "ERC20WithPermit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3579,
                        "src": "1377:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20WithPermit_$3579_$",
                          "typeString": "type(contract ERC20WithPermit)"
                        }
                      },
                      "id": 4732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3479,
                      "src": "1377:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory,string memory,uint8)"
                      }
                    },
                    "id": 4738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:143:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4739,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:143:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4743,
                        "name": "_nextOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4700,
                        "src": "1551:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4740,
                        "name": "Claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5498,
                        "src": "1530:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Claimable_$5498_$",
                          "typeString": "type(contract Claimable)"
                        }
                      },
                      "id": 4742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5448,
                      "src": "1530:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4745,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:32:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4749,
                        "name": "_nextOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4700,
                        "src": "1600:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4746,
                        "name": "CanReclaimTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5954,
                        "src": "1572:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CanReclaimTokens_$5954_$",
                          "typeString": "type(contract CanReclaimTokens)"
                        }
                      },
                      "id": 4748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5888,
                      "src": "1572:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4751,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:39:10"
                }
              ]
            },
            "documentation": null,
            "id": 4753,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4713,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4712,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11819,
                  "src": "1234:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1234:11:10"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4698,
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1029:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4700,
                  "name": "_nextOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1055:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4702,
                  "name": "_initialRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1083:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4704,
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1113:22:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4703,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4706,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1145:19:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4705,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4708,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1174:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4707,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4710,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1205:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4709,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1019:207:10"
            },
            "returnParameters": {
              "id": 4714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:10"
            },
            "scope": 4837,
            "src": "1000:618:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4767,
              "nodeType": "Block",
              "src": "1814:36:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4763,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4755,
                        "src": "1830:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4764,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4757,
                        "src": "1835:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4762,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11060,
                      "src": "1824:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4766,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:19:10"
                }
              ]
            },
            "documentation": "@notice mint can only be called by the tokens' associated Gateway\n contract. See Gateway's mint function instead.",
            "id": 4768,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4760,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4759,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10697,
                  "src": "1804:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1804:9:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4755,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "1767:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4757,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "1780:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1766:30:10"
            },
            "returnParameters": {
              "id": 4761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:0:10"
            },
            "scope": 4837,
            "src": "1753:97:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4782,
              "nodeType": "Block",
              "src": "2049:38:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4778,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4770,
                        "src": "2065:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4779,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4772,
                        "src": "2072:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4777,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11104,
                      "src": "2059:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2059:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4781,
                  "nodeType": "ExpressionStatement",
                  "src": "2059:21:10"
                }
              ]
            },
            "documentation": "@notice burn can only be called by the tokens' associated Gateway\n contract. See Gateway's burn functions instead.",
            "id": 4783,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4775,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4774,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10697,
                  "src": "2039:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2039:9:10"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4770,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4783,
                  "src": "2000:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4772,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4783,
                  "src": "2015:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1999:32:10"
            },
            "returnParameters": {
              "id": 4776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2049:0:10"
            },
            "scope": 4837,
            "src": "1986:101:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4807,
              "nodeType": "Block",
              "src": "2168:364:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4793,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4785,
                          "src": "2382:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4795,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12662,
                              "src": "2403:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RenERC20LogicV1_$4837",
                                "typeString": "contract RenERC20LogicV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RenERC20LogicV1_$4837",
                                "typeString": "contract RenERC20LogicV1"
                              }
                            ],
                            "id": 4794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2395:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2395:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2382:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656e45524332303a2063616e2774207472616e7366657220746f20746f6b656e2061646472657373",
                        "id": 4798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2422:43:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c21047359edf7a14a0d4ccb635b2bfbe189d27817636aadcaa0595670fef9849",
                          "typeString": "literal_string \"RenERC20: can't transfer to token address\""
                        },
                        "value": "RenERC20: can't transfer to token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c21047359edf7a14a0d4ccb635b2bfbe189d27817636aadcaa0595670fef9849",
                          "typeString": "literal_string \"RenERC20: can't transfer to token address\""
                        }
                      ],
                      "id": 4792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12565,
                        12566
                      ],
                      "referencedDeclaration": 12566,
                      "src": "2361:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:114:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4800,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:114:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4803,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4785,
                        "src": "2507:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4804,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4787,
                        "src": "2518:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4801,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12663,
                        "src": "2492:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RenERC20LogicV1_$4837",
                          "typeString": "contract super RenERC20LogicV1"
                        }
                      },
                      "id": 4802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10834,
                      "src": "2492:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 4805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2492:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4791,
                  "id": 4806,
                  "nodeType": "Return",
                  "src": "2485:40:10"
                }
              ]
            },
            "documentation": null,
            "id": 4808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4785,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4808,
                  "src": "2111:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2111:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4787,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4808,
                  "src": "2130:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2110:35:10"
            },
            "returnParameters": {
              "id": 4791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4790,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4808,
                  "src": "2162:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4789,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2162:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2161:6:10"
            },
            "scope": 4837,
            "src": "2093:439:10",
            "stateMutability": "nonpayable",
            "superFunction": 10834,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4835,
              "nodeType": "Block",
              "src": "2653:298:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4820,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4812,
                          "src": "2789:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4822,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12662,
                              "src": "2810:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RenERC20LogicV1_$4837",
                                "typeString": "contract RenERC20LogicV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RenERC20LogicV1_$4837",
                                "typeString": "contract RenERC20LogicV1"
                              }
                            ],
                            "id": 4821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2802:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2802:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2789:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656e45524332303a2063616e2774207472616e7366657220746f20746f6b656e2061646472657373",
                        "id": 4825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2829:43:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c21047359edf7a14a0d4ccb635b2bfbe189d27817636aadcaa0595670fef9849",
                          "typeString": "literal_string \"RenERC20: can't transfer to token address\""
                        },
                        "value": "RenERC20: can't transfer to token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c21047359edf7a14a0d4ccb635b2bfbe189d27817636aadcaa0595670fef9849",
                          "typeString": "literal_string \"RenERC20: can't transfer to token address\""
                        }
                      ],
                      "id": 4819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12565,
                        12566
                      ],
                      "referencedDeclaration": 12566,
                      "src": "2768:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:114:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4827,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:114:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4830,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4810,
                        "src": "2918:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4831,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4812,
                        "src": "2926:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4832,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4814,
                        "src": "2937:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4828,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12663,
                        "src": "2899:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RenERC20LogicV1_$4837",
                          "typeString": "contract super RenERC20LogicV1"
                        }
                      },
                      "id": 4829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10905,
                      "src": "2899:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:45:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4818,
                  "id": 4834,
                  "nodeType": "Return",
                  "src": "2892:52:10"
                }
              ]
            },
            "documentation": null,
            "id": 4836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4810,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "2560:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4812,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "2576:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2576:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4814,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "2595:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2559:51:10"
            },
            "returnParameters": {
              "id": 4818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4817,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "2643:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4816,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2643:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2642:6:10"
            },
            "scope": 4837,
            "src": "2538:413:10",
            "stateMutability": "nonpayable",
            "superFunction": 10905,
            "visibility": "public"
          }
        ],
        "scope": 4847,
        "src": "790:2163:10"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4838,
              "name": "InitializableAdminUpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12260,
              "src": "3262:37:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InitializableAdminUpgradeabilityProxy_$12260",
                "typeString": "contract InitializableAdminUpgradeabilityProxy"
              }
            },
            "id": 4839,
            "nodeType": "InheritanceSpecifier",
            "src": "3262:37:10"
          }
        ],
        "contractDependencies": [
          12149,
          12207,
          12260,
          12318,
          12356
        ],
        "contractKind": "contract",
        "documentation": "@dev The following are not necessary for deploying renBTC or renZEC contracts,\n but are used to track deployments.",
        "fullyImplemented": true,
        "id": 4840,
        "linearizedBaseContracts": [
          4840,
          12260,
          12318,
          12149,
          12207,
          12356
        ],
        "name": "RenBTC",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4847,
        "src": "3243:59:10"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4841,
              "name": "InitializableAdminUpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12260,
              "src": "3370:37:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InitializableAdminUpgradeabilityProxy_$12260",
                "typeString": "contract InitializableAdminUpgradeabilityProxy"
              }
            },
            "id": 4842,
            "nodeType": "InheritanceSpecifier",
            "src": "3370:37:10"
          }
        ],
        "contractDependencies": [
          12149,
          12207,
          12260,
          12318,
          12356
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4843,
        "linearizedBaseContracts": [
          4843,
          12260,
          12318,
          12149,
          12207,
          12356
        ],
        "name": "RenZEC",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4847,
        "src": "3351:59:10"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4844,
              "name": "InitializableAdminUpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12260,
              "src": "3478:37:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InitializableAdminUpgradeabilityProxy_$12260",
                "typeString": "contract InitializableAdminUpgradeabilityProxy"
              }
            },
            "id": 4845,
            "nodeType": "InheritanceSpecifier",
            "src": "3478:37:10"
          }
        ],
        "contractDependencies": [
          12149,
          12207,
          12260,
          12318,
          12356
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4846,
        "linearizedBaseContracts": [
          4846,
          12260,
          12318,
          12149,
          12207,
          12356
        ],
        "name": "RenBCH",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4847,
        "src": "3459:59:10"
      }
    ],
    "src": "0:3519:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x9d6ef0d454e23e234e8c1cf70cee49a44226ffb036017442229a7a5bd1d0957e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_rate",
              "type": "uint256"
            }
          ],
          "name": "LogRateChanged",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xe2d6cCAC3EE3A21AbF7BeDBE2E107FfC0C037e80",
      "transactionHash": "0x1f82ec934c5e7a9c1b93d6ce56e79e7327fd9f8df83fbfa77dfadba7fc433f64"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-30T04:17:17.146Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(address,uint256)": {
        "notice": "burn can only be called by the tokens' associated Gateway contract. See Gateway's burn functions instead."
      },
      "mint(address,uint256)": {
        "notice": "mint can only be called by the tokens' associated Gateway contract. See Gateway's mint function instead."
      },
      "recoverTokens(address)": {
        "notice": "Allow the owner of the contract to recover funds accidentally sent to the contract. To withdraw ETH, the token should be set to `0x0`."
      }
    },
    "notice": "RenERC20 represents a digital asset that has been bridged on to the Ethereum ledger. It exposes mint and burn functions that can only be called by it's associated Gateway contract."
  }
}