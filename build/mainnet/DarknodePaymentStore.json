{
  "contractName": "DarknodePaymentStore",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_VERSION",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ETHEREUM",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "darknodeBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_nextOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "totalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "availableBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_darknode",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "incrementDarknodeBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_darknode",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_VERSION\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHEREUM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"availableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"darknodeBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_darknode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"incrementDarknodeBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nextOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_darknode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"availableBalance(address)\":{\"params\":{\"_token\":\"The token to check balance of.\"},\"return\":\"The available balance of the contract.\"},\"constructor\":{\"params\":{\"_VERSION\":\"A string defining the contract version.\"}},\"incrementDarknodeBalance(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount that the balance should be incremented by.\",\"_darknode\":\"The address of the darknode to increase balance of.\",\"_token\":\"The token which the balance should be incremented.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalBalance(address)\":{\"params\":{\"_token\":\"The token to check balance of.\"},\"return\":\"The total balance of the contract.\"},\"transfer(address,address,uint256,address)\":{\"params\":{\"_amount\":\"The amount to transfer.\",\"_darknode\":\"The address of the darknode.\",\"_recipient\":\"The address to withdraw it to.\",\"_token\":\"Which token to transfer.\"}}}},\"userdoc\":{\"methods\":{\"availableBalance(address)\":{\"notice\":\"Get the available balance of the contract for a particular token         This is the free amount which has not yet been allocated to         darknodes. \"},\"constructor\":\"The contract constructor. \",\"incrementDarknodeBalance(address,address,uint256)\":{\"notice\":\"Increments the amount of funds allocated to a particular         darknode. \"},\"totalBalance(address)\":{\"notice\":\"Get the total balance of the contract for a particular token. \"},\"transfer(address,address,uint256,address)\":{\"notice\":\"Transfers an amount out of balance to a specified address. \"}},\"notice\":\"DarknodePaymentStore is responsible for tracking balances which have         been allocated to the darknodes. It is also responsible for holding         the tokens to be paid out to darknodes.\"}},\"settings\":{\"compilationTarget\":{\"/home/noah/github/renproject/ren-sol/contracts/DarknodePayment/DarknodePaymentStore.sol\":\"DarknodePaymentStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/noah/github/renproject/ren-sol/contracts/DarknodePayment/DarknodePaymentStore.sol\":{\"keccak256\":\"0xf5be4499ec079a4361fe0f396427115aacad61657fdbf6facd57d5c59be9057a\",\"urls\":[\"bzz-raw://3b311da247daf9c56fe97055ca088f3111024937d42a20d74e8a8d6c806f8ca4\",\"dweb:/ipfs/QmXrsiNhQtX4BeFt7uj1FTJLzbvwHPNMmvLfQ1X35Jg1Hz\"]},\"/home/noah/github/renproject/ren-sol/contracts/Governance/Claimable.sol\":{\"keccak256\":\"0x489acf506024340525745cefc9d6ab94774cb5e1852e6d586fc38fa5fb893d71\",\"urls\":[\"bzz-raw://1813667beee7be9b3be81b5a3dd1018b7c68873f6df6b638205c829ea85d7de9\",\"dweb:/ipfs/QmRbtEhtPM4RYf9SP5UGTFAU8EJGuDE1eXJTJ34f7oEKXQ\"]},\"/home/noah/github/renproject/ren-sol/contracts/libraries/ERC20WithFees.sol\":{\"keccak256\":\"0xc92efe725a4116eb5afc73208150761da0faee85b33371bbec7050f2778288d8\",\"urls\":[\"bzz-raw://d3f7e3d68c4586655497a6ad824892da1640942d327f9b56710b9ffadf632544\",\"dweb:/ipfs/Qmf7YYvgBDRs3Sj8HUcTwUzAt8wRNNzRXQFJjqiRzcAZ6z\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1eee490bb6b1751e8d39e2670fa0d04dd2e8b7af6da33e1fb4c1593e771b56fb\",\"urls\":[\"bzz-raw://cf10c73acede242d453658d9b6edadab89de71b0818c7a3d35d732db62dfffb3\",\"dweb:/ipfs/QmcXcS2ZJpwwoJ5WQtPUn3Gg7zJadqvfCPUcGW14mmXfsC\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200171c3803806200171c833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b5060405250505062000103336200012060201b620006771760201c565b805162000118906067906020840190620002f3565b505062000395565b600054610100900460ff1680620001455750620001456001600160e01b03620001ea16565b8062000154575060005460ff16155b620001915760405162461bcd60e51b815260040180806020018281038252602e815260200180620016ee602e913960400191505060405180910390fd5b600054610100900460ff16158015620001bd576000805460ff1961ff0019909116610100171660011790555b620001d382620001f160201b62000d6f1760201c565b8015620001e6576000805461ff00191690555b5050565b303b155b90565b600054610100900460ff1680620002165750620002166001600160e01b03620001ea16565b8062000225575060005460ff16155b620002625760405162461bcd60e51b815260040180806020018281038252602e815260200180620016ee602e913960400191505060405180910390fd5b600054610100900460ff161580156200028e576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015620001e6576000805461ff00191690555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033657805160ff191683800117855562000366565b8280016001018555821562000366579182015b828111156200036657825182559160200191906001019062000349565b506200037492915062000378565b5090565b620001ee91905b808211156200037457600081556001016200037f565b61134980620003a56000396000f3fe6080604052600436106100e85760003560e01c8063a0821be31161008a578063f2fde38b11610059578063f2fde38b146102df578063f7cdf47c14610312578063f9ce781314610327578063ffa1ad7414610370576100e8565b8063a0821be314610221578063c4d66de814610254578063d23b90a514610287578063e30c3978146102ca576100e8565b806370324b77116100c657806370324b7714610177578063715018a6146101b25780638da5cb5b146101c75780638f32d59b146101f8576100e8565b80630483a7f6146100ea5780634e71e0c81461012f5780636eacd39814610144575b005b3480156100f657600080fd5b5061011d6004803603602081101561010d57600080fd5b50356001600160a01b03166103fa565b60408051918252519081900360200190f35b34801561013b57600080fd5b506100e861040c565b34801561015057600080fd5b5061011d6004803603602081101561016757600080fd5b50356001600160a01b031661048c565b34801561018357600080fd5b5061011d6004803603604081101561019a57600080fd5b506001600160a01b0381358116916020013516610534565b3480156101be57600080fd5b506100e8610551565b3480156101d357600080fd5b506101dc6105e2565b604080516001600160a01b039092168252519081900360200190f35b34801561020457600080fd5b5061020d6105f1565b604080519115158252519081900360200190f35b34801561022d57600080fd5b5061011d6004803603602081101561024457600080fd5b50356001600160a01b0316610617565b34801561026057600080fd5b506100e86004803603602081101561027757600080fd5b50356001600160a01b0316610677565b34801561029357600080fd5b506100e8600480360360608110156102aa57600080fd5b506001600160a01b03813581169160208101359091169060400135610723565b3480156102d657600080fd5b506101dc61088a565b3480156102eb57600080fd5b506100e86004803603602081101561030257600080fd5b50356001600160a01b0316610899565b34801561031e57600080fd5b506101dc61098a565b34801561033357600080fd5b506100e86004803603608081101561034a57600080fd5b506001600160a01b038135811691602081013582169160408201359160600135166109a2565b34801561037c57600080fd5b50610385610b9f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103bf5781810151838201526020016103a7565b50505050905090810190601f1680156103ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60696020526000908152604090205481565b6066546001600160a01b0316610420610c2d565b6001600160a01b0316146104655760405162461bcd60e51b815260040180806020018281038252602a8152602001806112c1602a913960400191505060405180910390fd5b60665461047a906001600160a01b0316610c31565b606680546001600160a01b0319169055565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156104ba57504761052f565b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561050057600080fd5b505afa158015610514573d6000803e3d6000fd5b505050506040513d602081101561052a57600080fd5b505190505b919050565b606860209081526000928352604080842090915290825290205481565b6105596105f1565b610598576040805162461bcd60e51b81526020600482018190526024820152600080516020611236833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b6033546000906001600160a01b0316610608610c2d565b6001600160a01b031614905090565b600061067160696000846001600160a01b03166001600160a01b03168152602001908152602001600020546040518060600160405280603981526020016111fd603991396106648561048c565b919063ffffffff610cd216565b92915050565b600054610100900460ff16806106905750610690610d69565b8061069e575060005460ff16155b6106d95760405162461bcd60e51b815260040180806020018281038252602e815260200180611256602e913960400191505060405180910390fd5b600054610100900460ff16158015610704576000805460ff1961ff0019909116610100171660011790555b61070d82610d6f565b801561071f576000805461ff00191690555b5050565b61072b6105f1565b61076a576040805162461bcd60e51b81526020600482018190526024820152600080516020611236833981519152604482015290519081900360640190fd5b600081116107a95760405162461bcd60e51b81526004018080602001828103825260248152602001806111406024913960400191505060405180910390fd5b806107b383610617565b10156107f05760405162461bcd60e51b815260040180806020018281038252603381526020018061118a6033913960400191505060405180910390fd5b6001600160a01b03808416600090815260686020908152604080832093861683529290522054610826908263ffffffff610e6016565b6001600160a01b0380851660009081526068602090815260408083209387168352928152828220939093556069909252902054610869908263ffffffff610e6016565b6001600160a01b039092166000908152606960205260409020919091555050565b6066546001600160a01b031681565b6108a16105f1565b6108e0576040805162461bcd60e51b81526020600482018190526024820152600080516020611236833981519152604482015290519081900360640190fd5b6108e86105e2565b6001600160a01b0316816001600160a01b03161415801561091757506066546001600160a01b03828116911614155b610968576040805162461bcd60e51b815260206004820152601c60248201527f436c61696d61626c653a20696e76616c6964206e6577206f776e657200000000604482015290519081900360640190fd5b606680546001600160a01b0319166001600160a01b0392909216919091179055565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6109aa6105f1565b6109e9576040805162461bcd60e51b81526020600482018190526024820152600080516020611236833981519152604482015290519081900360640190fd5b6001600160a01b03808516600090815260686020908152604080832093871683529290522054821115610a4d5760405162461bcd60e51b815260040180806020018281038252603381526020018061110d6033913960400191505060405180910390fd5b610a9d826040518060600160405280604081526020016111bd604091396001600160a01b038088166000908152606860209081526040808320938a1683529290522054919063ffffffff610cd216565b6001600160a01b03808616600090815260686020908152604080832093881683529281529082902092909255805160608101909152603d808252610b0c9285929190611284908301396001600160a01b038616600090815260696020526040902054919063ffffffff610cd216565b6001600160a01b03841660008181526069602052604090209190915573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610b7f576040516001600160a01b0382169083156108fc029084906000818181858888f19350505050158015610b79573d6000803e3d6000fd5b50610b99565b610b996001600160a01b038416828463ffffffff610ec116565b50505050565b6067805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c255780601f10610bfa57610100808354040283529160200191610c25565b820191906000526020600020905b815481529060010190602001808311610c0857829003601f168201915b505050505081565b3390565b6001600160a01b038116610c765760405162461bcd60e51b81526004018080602001828103825260268152602001806111646026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b60008184841115610d615760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d26578181015183820152602001610d0e565b50505050905090810190601f168015610d535780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b303b1590565b600054610100900460ff1680610d885750610d88610d69565b80610d96575060005460ff16155b610dd15760405162461bcd60e51b815260040180806020018281038252602e815260200180611256602e913960400191505060405180910390fd5b600054610100900460ff16158015610dfc576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3801561071f576000805461ff00191690555050565b600082820183811015610eba576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f13908490610f18565b505050565b610f2a826001600160a01b03166110d0565b610f7b576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610fb95780518252601f199092019160209182019101610f9a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461101b576040519150601f19603f3d011682016040523d82523d6000602084013e611020565b606091505b509150915081611077576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610b995780806020019051602081101561109357600080fd5b5051610b995760405162461bcd60e51b815260040180806020018281038252602a8152602001806112eb602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906111045750808214155b94935050505056fe4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e74206461726b6e6f64652062616c616e63654461726b6e6f64655061796d656e7453746f72653a20696e76616c696420616d6f756e744f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e7420636f6e74726163742062616c616e63654461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e74206461726b6e6f64652062616c616e636520666f72207472616e736665724461726b6e6f64655061796d656e7453746f72653a206c6f636b65642062616c616e63652065786365656420746f74616c2062616c616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e7420746f6b656e2062616c616e636520666f72207472616e73666572436c61696d61626c653a2063616c6c6572206973206e6f74207468652070656e64696e67206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820dfec9d54f706f989a869be49fc7d386617ee34c2358ca6fe1d8b7dbce0a9c0c464736f6c63430005100032436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c8063a0821be31161008a578063f2fde38b11610059578063f2fde38b146102df578063f7cdf47c14610312578063f9ce781314610327578063ffa1ad7414610370576100e8565b8063a0821be314610221578063c4d66de814610254578063d23b90a514610287578063e30c3978146102ca576100e8565b806370324b77116100c657806370324b7714610177578063715018a6146101b25780638da5cb5b146101c75780638f32d59b146101f8576100e8565b80630483a7f6146100ea5780634e71e0c81461012f5780636eacd39814610144575b005b3480156100f657600080fd5b5061011d6004803603602081101561010d57600080fd5b50356001600160a01b03166103fa565b60408051918252519081900360200190f35b34801561013b57600080fd5b506100e861040c565b34801561015057600080fd5b5061011d6004803603602081101561016757600080fd5b50356001600160a01b031661048c565b34801561018357600080fd5b5061011d6004803603604081101561019a57600080fd5b506001600160a01b0381358116916020013516610534565b3480156101be57600080fd5b506100e8610551565b3480156101d357600080fd5b506101dc6105e2565b604080516001600160a01b039092168252519081900360200190f35b34801561020457600080fd5b5061020d6105f1565b604080519115158252519081900360200190f35b34801561022d57600080fd5b5061011d6004803603602081101561024457600080fd5b50356001600160a01b0316610617565b34801561026057600080fd5b506100e86004803603602081101561027757600080fd5b50356001600160a01b0316610677565b34801561029357600080fd5b506100e8600480360360608110156102aa57600080fd5b506001600160a01b03813581169160208101359091169060400135610723565b3480156102d657600080fd5b506101dc61088a565b3480156102eb57600080fd5b506100e86004803603602081101561030257600080fd5b50356001600160a01b0316610899565b34801561031e57600080fd5b506101dc61098a565b34801561033357600080fd5b506100e86004803603608081101561034a57600080fd5b506001600160a01b038135811691602081013582169160408201359160600135166109a2565b34801561037c57600080fd5b50610385610b9f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103bf5781810151838201526020016103a7565b50505050905090810190601f1680156103ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60696020526000908152604090205481565b6066546001600160a01b0316610420610c2d565b6001600160a01b0316146104655760405162461bcd60e51b815260040180806020018281038252602a8152602001806112c1602a913960400191505060405180910390fd5b60665461047a906001600160a01b0316610c31565b606680546001600160a01b0319169055565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156104ba57504761052f565b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561050057600080fd5b505afa158015610514573d6000803e3d6000fd5b505050506040513d602081101561052a57600080fd5b505190505b919050565b606860209081526000928352604080842090915290825290205481565b6105596105f1565b610598576040805162461bcd60e51b81526020600482018190526024820152600080516020611236833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b6033546000906001600160a01b0316610608610c2d565b6001600160a01b031614905090565b600061067160696000846001600160a01b03166001600160a01b03168152602001908152602001600020546040518060600160405280603981526020016111fd603991396106648561048c565b919063ffffffff610cd216565b92915050565b600054610100900460ff16806106905750610690610d69565b8061069e575060005460ff16155b6106d95760405162461bcd60e51b815260040180806020018281038252602e815260200180611256602e913960400191505060405180910390fd5b600054610100900460ff16158015610704576000805460ff1961ff0019909116610100171660011790555b61070d82610d6f565b801561071f576000805461ff00191690555b5050565b61072b6105f1565b61076a576040805162461bcd60e51b81526020600482018190526024820152600080516020611236833981519152604482015290519081900360640190fd5b600081116107a95760405162461bcd60e51b81526004018080602001828103825260248152602001806111406024913960400191505060405180910390fd5b806107b383610617565b10156107f05760405162461bcd60e51b815260040180806020018281038252603381526020018061118a6033913960400191505060405180910390fd5b6001600160a01b03808416600090815260686020908152604080832093861683529290522054610826908263ffffffff610e6016565b6001600160a01b0380851660009081526068602090815260408083209387168352928152828220939093556069909252902054610869908263ffffffff610e6016565b6001600160a01b039092166000908152606960205260409020919091555050565b6066546001600160a01b031681565b6108a16105f1565b6108e0576040805162461bcd60e51b81526020600482018190526024820152600080516020611236833981519152604482015290519081900360640190fd5b6108e86105e2565b6001600160a01b0316816001600160a01b03161415801561091757506066546001600160a01b03828116911614155b610968576040805162461bcd60e51b815260206004820152601c60248201527f436c61696d61626c653a20696e76616c6964206e6577206f776e657200000000604482015290519081900360640190fd5b606680546001600160a01b0319166001600160a01b0392909216919091179055565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6109aa6105f1565b6109e9576040805162461bcd60e51b81526020600482018190526024820152600080516020611236833981519152604482015290519081900360640190fd5b6001600160a01b03808516600090815260686020908152604080832093871683529290522054821115610a4d5760405162461bcd60e51b815260040180806020018281038252603381526020018061110d6033913960400191505060405180910390fd5b610a9d826040518060600160405280604081526020016111bd604091396001600160a01b038088166000908152606860209081526040808320938a1683529290522054919063ffffffff610cd216565b6001600160a01b03808616600090815260686020908152604080832093881683529281529082902092909255805160608101909152603d808252610b0c9285929190611284908301396001600160a01b038616600090815260696020526040902054919063ffffffff610cd216565b6001600160a01b03841660008181526069602052604090209190915573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610b7f576040516001600160a01b0382169083156108fc029084906000818181858888f19350505050158015610b79573d6000803e3d6000fd5b50610b99565b610b996001600160a01b038416828463ffffffff610ec116565b50505050565b6067805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c255780601f10610bfa57610100808354040283529160200191610c25565b820191906000526020600020905b815481529060010190602001808311610c0857829003601f168201915b505050505081565b3390565b6001600160a01b038116610c765760405162461bcd60e51b81526004018080602001828103825260268152602001806111646026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b60008184841115610d615760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d26578181015183820152602001610d0e565b50505050905090810190601f168015610d535780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b303b1590565b600054610100900460ff1680610d885750610d88610d69565b80610d96575060005460ff16155b610dd15760405162461bcd60e51b815260040180806020018281038252602e815260200180611256602e913960400191505060405180910390fd5b600054610100900460ff16158015610dfc576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3801561071f576000805461ff00191690555050565b600082820183811015610eba576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f13908490610f18565b505050565b610f2a826001600160a01b03166110d0565b610f7b576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610fb95780518252601f199092019160209182019101610f9a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461101b576040519150601f19603f3d011682016040523d82523d6000602084013e611020565b606091505b509150915081611077576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610b995780806020019051602081101561109357600080fd5b5051610b995760405162461bcd60e51b815260040180806020018281038252602a8152602001806112eb602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906111045750808214155b94935050505056fe4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e74206461726b6e6f64652062616c616e63654461726b6e6f64655061796d656e7453746f72653a20696e76616c696420616d6f756e744f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e7420636f6e74726163742062616c616e63654461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e74206461726b6e6f64652062616c616e636520666f72207472616e736665724461726b6e6f64655061796d656e7453746f72653a206c6f636b65642062616c616e63652065786365656420746f74616c2062616c616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e7420746f6b656e2062616c616e636520666f72207472616e73666572436c61696d61626c653a2063616c6c6572206973206e6f74207468652070656e64696e67206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820dfec9d54f706f989a869be49fc7d386617ee34c2358ca6fe1d8b7dbce0a9c0c464736f6c63430005100032",
  "sourceMap": "568:3976:2:-;;;1271:120;8:9:-1;5:2;;;30:1;27;20:12;5:2;1271:120:2;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1271:120:2;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1271:120:2;;420:4:-1;411:14;;;;1271:120:2;;;;;411:14:-1;1271:120:2;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1271:120:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:32;1345:10;1324:20;;;;;:32;;:::i;:::-;1366:18;;;;:7;;:18;;;;;:::i;:::-;;1271:120;568:3976;;421:106:15;1024:12:60;;;;;;;;:31;;-1:-1:-1;1040:15:60;-1:-1:-1;;;;;1040:13:60;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:60;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:60;;;;;1225:18;1213:4;1225:18;;;1170:80;490:30:15;509:10;490:18;;;;;:30;;:::i;:::-;1268:14:60;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:60;;;1264:55;421:106:15;;:::o;1409:498:60:-;1820:4;1864:17;1895:7;1409:498;;:::o;741:142:52:-;1024:12:60;;;;;;;;:31;;-1:-1:-1;1040:15:60;-1:-1:-1;;;;;1040:13:60;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:60;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:60;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:52;:15;;-1:-1:-1;;;;;;806:15:52;-1:-1:-1;;;;;806:15:52;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:52;;-1:-1:-1;;836:40:52;1268:14:60;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:60;;;741:142:52;;:::o;568:3976:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;568:3976:2;;;-1:-1:-1;568:3976:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "568:3976:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1101:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1101:49:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1101:49:2;-1:-1:-1;;;;;1101:49:2;;:::i;:::-;;;;;;;;;;;;;;;;952:128:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;952:128:15;;;:::i;1705:237:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1705:237:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1705:237:2;-1:-1:-1;;;;;1705:237:2;;:::i;973:71::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;973:71:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;973:71:2;;;;;;;;;;:::i;1746:137:52:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:137:52;;;:::i;959:77::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;959:77:52;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:52;;;;;;;;;;;;;;1310:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1310:92:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;2248:263:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2248:263:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2248:263:2;-1:-1:-1;;;;;2248:263:2;;:::i;421:106:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;421:106:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;421:106:15;-1:-1:-1;;;;;421:106:15;;:::i;2851:535:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2851:535:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2851:535:2;;;;;;;;;;;;;;;;;:::i;387:27:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;387:27:15;;;:::i;712:234::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;712:234:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;712:234:15;-1:-1:-1;;;;;712:234:15;;:::i;832:77:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:77:2;;;:::i;3680:861::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3680:861:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3680:861:2;;;;;;;;;;;;;;;;;;;;;;:::i;716:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;716:21:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;716:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1101:49;;;;;;;;;;;;;:::o;952:128:15:-;608:12;;-1:-1:-1;;;;;608:12:15;592;:10;:12::i;:::-;-1:-1:-1;;;;;592:28:15;;571:117;;;;-1:-1:-1;;;571:117:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:12;;1012:32;;-1:-1:-1;;;;;1031:12:15;1012:18;:32::i;:::-;1061:12;1054:19;;-1:-1:-1;;;;;;1054:19:15;;;952:128::o;1705:237:2:-;1764:7;-1:-1:-1;;;;;1787:18:2;;867:42;1787:18;1783:153;;;-1:-1:-1;1828:21:2;1821:28;;1783:153;1887:38;;;-1:-1:-1;;;1887:38:2;;1919:4;1887:38;;;;;;-1:-1:-1;;;;;1887:23:2;;;;;:38;;;;;;;;;;;;;;:23;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1887:38:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1887:38:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1887:38:2;;-1:-1:-1;1783:153:2;1705:237;;;:::o;973:71::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1746:137:52:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:52;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:52;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:52;;;1746:137::o;959:77::-;1023:6;;-1:-1:-1;;;;;1023:6:52;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:52;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:52;;1366:29;;1310:92;:::o;2248:263:2:-;2311:7;2349:155;2391:14;:22;2406:6;-1:-1:-1;;;;;2391:22:2;-1:-1:-1;;;;;2391:22:2;;;;;;;;;;;;;2349:155;;;;;;;;;;;;;;;;;:20;2362:6;2349:12;:20::i;:::-;:24;:155;;:24;:155;:::i;:::-;2330:174;2248:263;-1:-1:-1;;2248:263:2:o;421:106:15:-;1024:12:60;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:60;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:60;;;;;1225:18;1213:4;1225:18;;;1170:80;490:30:15;509:10;490:18;:30::i;:::-;1268:14:60;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:60;;;1264:55;421:106:15;;:::o;2851:535:2:-;1163:9:52;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:52;;;;;;;;;;;;;;;3014:1:2;3004:7;:11;2996:60;;;;-1:-1:-1;;;2996:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3115:7;3087:24;3104:6;3087:16;:24::i;:::-;:35;;3066:133;;;;-1:-1:-1;;;3066:133:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3248:27:2;;;;;;;:16;:27;;;;;;;;:35;;;;;;;;;;:61;;3301:7;3248:61;:52;:61;:::i;:::-;-1:-1:-1;;;;;3210:27:2;;;;;;;:16;:27;;;;;;;;:35;;;;;;;;;;;:99;;;;3344:14;:22;;;;;;:35;;3371:7;3344:35;:26;:35;:::i;:::-;-1:-1:-1;;;;;3319:22:2;;;;;;;:14;:22;;;;;:60;;;;-1:-1:-1;;2851:535:2:o;387:27:15:-;;;-1:-1:-1;;;;;387:27:15;;:::o;712:234::-;1163:9:52;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:52;;;;;;;;;;;;;;;817:7:15;:5;:7::i;:::-;-1:-1:-1;;;;;805:19:15;:8;-1:-1:-1;;;;;805:19:15;;;:47;;;;-1:-1:-1;840:12:15;;-1:-1:-1;;;;;828:24:15;;;840:12;;828:24;;805:47;784:122;;;;;-1:-1:-1;;;784:122:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:12;:23;;-1:-1:-1;;;;;;916:23:15;-1:-1:-1;;;;;916:23:15;;;;;;;;;;712:234::o;832:77:2:-;867:42;832:77;:::o;3680:861::-;1163:9:52;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:52;;;;;;;;;;;;;;;-1:-1:-1;;;;;3866:27:2;;;;;;;:16;:27;;;;;;;;:35;;;;;;;;;;:46;-1:-1:-1;3866:46:2;3845:144;;;;-1:-1:-1;;;3845:144:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4037:163;4103:7;4037:163;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4037:27:2;;;;;;;:16;:27;;;;;;;;:35;;;;;;;;;;;:163;;:52;:163;:::i;:::-;-1:-1:-1;;;;;3999:27:2;;;;;;;:16;:27;;;;;;;;:35;;;;;;;;;;;;:201;;;;4235:134;;;;;;;;;;;;;;4275:7;;4235:134;;;;;;;-1:-1:-1;;;;;4235:22:2;;;;;;:14;:22;;;;;;;:134;;:26;:134;:::i;:::-;-1:-1:-1;;;;;4210:22:2;;;;;;:14;:22;;;;;:159;;;;867:42;4384:18;4380:155;;;4418:28;;-1:-1:-1;;;;;4418:19:2;;;:28;;;;;4438:7;;4418:28;;;;4438:7;4418:19;:28;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4418:28:2;4380:155;;;4477:47;-1:-1:-1;;;;;4477:26:2;;4504:10;4516:7;4477:47;:26;:47;:::i;:::-;3680:861;;;;:::o;716:21::-;;;;;;;;;;;;;;;-1:-1:-1;;716:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;867:96:42:-;946:10;867:96;:::o;2240:225:52:-;-1:-1:-1;;;;;2313:22:52;;2305:73;;;;-1:-1:-1;;;2305:73:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:52;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:52;-1:-1:-1;;;;;2441:17:52;;;;;;;;;;2240:225::o;1732:187:51:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:51;;;1732:187::o;1409:498:60:-;1820:4;1864:17;1895:7;1409:498;:::o;741:142:52:-;1024:12:60;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:60;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:60;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:52;:15;;-1:-1:-1;;;;;;806:15:52;-1:-1:-1;;;;;806:15:52;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:52;;-1:-1:-1;;836:40:52;1268:14:60;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:60;;;741:142:52;;:::o;834:176:51:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:51:o;662:174:58:-;770:58;;;-1:-1:-1;;;;;770:58:58;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:58;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:58;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;2666:1095::-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:58;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:58;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:58;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:58;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:58;3659:85;;;;-1:-1:-1;;;3659:85:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:797:59;617:4;1265:20;;1110:66;1304:15;;;;;:42;;;1335:11;1323:8;:23;;1304:42;1296:51;557:797;-1:-1:-1;;;;557:797:59:o",
  "source": "pragma solidity 0.5.16;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"../Governance/Claimable.sol\";\nimport \"../libraries/ERC20WithFees.sol\";\n\n/// @notice DarknodePaymentStore is responsible for tracking balances which have\n///         been allocated to the darknodes. It is also responsible for holding\n///         the tokens to be paid out to darknodes.\ncontract DarknodePaymentStore is Claimable {\n    using SafeMath for uint256;\n    using SafeERC20 for ERC20;\n    using ERC20WithFees for ERC20;\n\n    string public VERSION; // Passed in as a constructor parameter.\n\n    /// @notice The special address for Ether.\n    address public constant ETHEREUM = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n\n    /// @notice Mapping of darknode -> token -> balance.\n    mapping(address => mapping(address => uint256)) public darknodeBalances;\n\n    /// @notice Mapping of token -> lockedAmount.\n    mapping(address => uint256) public lockedBalances;\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    constructor(string memory _VERSION) public {\n        Claimable.initialize(msg.sender);\n        VERSION = _VERSION;\n    }\n\n    /// @notice Allow direct ETH payments to be made to the DarknodePaymentStore.\n    function() external payable {}\n\n    /// @notice Get the total balance of the contract for a particular token.\n    ///\n    /// @param _token The token to check balance of.\n    /// @return The total balance of the contract.\n    function totalBalance(address _token) public view returns (uint256) {\n        if (_token == ETHEREUM) {\n            return address(this).balance;\n        } else {\n            return ERC20(_token).balanceOf(address(this));\n        }\n    }\n\n    /// @notice Get the available balance of the contract for a particular token\n    ///         This is the free amount which has not yet been allocated to\n    ///         darknodes.\n    ///\n    /// @param _token The token to check balance of.\n    /// @return The available balance of the contract.\n    function availableBalance(address _token) public view returns (uint256) {\n        return\n            totalBalance(_token).sub(\n                lockedBalances[_token],\n                \"DarknodePaymentStore: locked balance exceed total balance\"\n            );\n    }\n\n    /// @notice Increments the amount of funds allocated to a particular\n    ///         darknode.\n    ///\n    /// @param _darknode The address of the darknode to increase balance of.\n    /// @param _token The token which the balance should be incremented.\n    /// @param _amount The amount that the balance should be incremented by.\n    function incrementDarknodeBalance(\n        address _darknode,\n        address _token,\n        uint256 _amount\n    ) external onlyOwner {\n        require(_amount > 0, \"DarknodePaymentStore: invalid amount\");\n        require(\n            availableBalance(_token) >= _amount,\n            \"DarknodePaymentStore: insufficient contract balance\"\n        );\n\n        darknodeBalances[_darknode][_token] = darknodeBalances[_darknode][_token]\n            .add(_amount);\n        lockedBalances[_token] = lockedBalances[_token].add(_amount);\n    }\n\n    /// @notice Transfers an amount out of balance to a specified address.\n    ///\n    /// @param _darknode The address of the darknode.\n    /// @param _token Which token to transfer.\n    /// @param _amount The amount to transfer.\n    /// @param _recipient The address to withdraw it to.\n    function transfer(\n        address _darknode,\n        address _token,\n        uint256 _amount,\n        address payable _recipient\n    ) external onlyOwner {\n        require(\n            darknodeBalances[_darknode][_token] >= _amount,\n            \"DarknodePaymentStore: insufficient darknode balance\"\n        );\n        darknodeBalances[_darknode][_token] = darknodeBalances[_darknode][_token]\n            .sub(\n            _amount,\n            \"DarknodePaymentStore: insufficient darknode balance for transfer\"\n        );\n        lockedBalances[_token] = lockedBalances[_token].sub(\n            _amount,\n            \"DarknodePaymentStore: insufficient token balance for transfer\"\n        );\n\n        if (_token == ETHEREUM) {\n            _recipient.transfer(_amount);\n        } else {\n            ERC20(_token).safeTransfer(_recipient, _amount);\n        }\n    }\n\n}\n",
  "sourcePath": "/home/noah/github/renproject/ren-sol/contracts/DarknodePayment/DarknodePaymentStore.sol",
  "ast": {
    "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/DarknodePayment/DarknodePaymentStore.sol",
    "exportedSymbols": {
      "DarknodePaymentStore": [
        1247
      ]
    },
    "id": 1248,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1021,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "id": 1022,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 10657,
        "src": "25:78:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "id": 1023,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 11193,
        "src": "104:82:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
        "id": 1024,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 11713,
        "src": "187:86:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Governance/Claimable.sol",
        "file": "../Governance/Claimable.sol",
        "id": 1025,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 5505,
        "src": "275:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/libraries/ERC20WithFees.sol",
        "file": "../libraries/ERC20WithFees.sol",
        "id": 1026,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 6073,
        "src": "313:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1027,
              "name": "Claimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5504,
              "src": "601:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Claimable_$5504",
                "typeString": "contract Claimable"
              }
            },
            "id": 1028,
            "nodeType": "InheritanceSpecifier",
            "src": "601:9:2"
          }
        ],
        "contractDependencies": [
          5504,
          9349,
          10780,
          11856
        ],
        "contractKind": "contract",
        "documentation": "@notice DarknodePaymentStore is responsible for tracking balances which have\n         been allocated to the darknodes. It is also responsible for holding\n         the tokens to be paid out to darknodes.",
        "fullyImplemented": true,
        "id": 1247,
        "linearizedBaseContracts": [
          1247,
          5504,
          10780,
          9349,
          11856
        ],
        "name": "DarknodePaymentStore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1031,
            "libraryName": {
              "contractScope": null,
              "id": 1029,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10656,
              "src": "623:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10656",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "617:27:2",
            "typeName": {
              "id": 1030,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "636:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1034,
            "libraryName": {
              "contractScope": null,
              "id": 1032,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11712,
              "src": "655:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$11712",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "649:26:2",
            "typeName": {
              "contractScope": null,
              "id": 1033,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11192,
              "src": "669:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11192",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 1037,
            "libraryName": {
              "contractScope": null,
              "id": 1035,
              "name": "ERC20WithFees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6072,
              "src": "686:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20WithFees_$6072",
                "typeString": "library ERC20WithFees"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "680:30:2",
            "typeName": {
              "contractScope": null,
              "id": 1036,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11192,
              "src": "704:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11192",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 1039,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 1247,
            "src": "716:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1038,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "716:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1042,
            "name": "ETHEREUM",
            "nodeType": "VariableDeclaration",
            "scope": 1247,
            "src": "832:77:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1040,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "832:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
              "id": 1041,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "867:42:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1048,
            "name": "darknodeBalances",
            "nodeType": "VariableDeclaration",
            "scope": 1247,
            "src": "973:71:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1047,
              "keyType": {
                "id": 1043,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "981:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "973:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1046,
                "keyType": {
                  "id": 1044,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1000:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "992:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1045,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1011:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1052,
            "name": "lockedBalances",
            "nodeType": "VariableDeclaration",
            "scope": 1247,
            "src": "1101:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1051,
              "keyType": {
                "id": 1049,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1109:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1101:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1050,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1120:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1068,
              "nodeType": "Block",
              "src": "1314:77:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1060,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12574,
                          "src": "1345:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1345:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1057,
                        "name": "Claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5504,
                        "src": "1324:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Claimable_$5504_$",
                          "typeString": "type(contract Claimable)"
                        }
                      },
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5454,
                      "src": "1324:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1064,
                      "name": "VERSION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "1366:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1065,
                      "name": "_VERSION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1054,
                      "src": "1376:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1366:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:18:2"
                }
              ]
            },
            "documentation": "@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.",
            "id": 1069,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1054,
                  "name": "_VERSION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "1283:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1282:24:2"
            },
            "returnParameters": {
              "id": 1056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:0:2"
            },
            "scope": 1247,
            "src": "1271:120:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1072,
              "nodeType": "Block",
              "src": "1507:2:2",
              "statements": []
            },
            "documentation": "@notice Allow direct ETH payments to be made to the DarknodePaymentStore.",
            "id": 1073,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1487:2:2"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1507:0:2"
            },
            "scope": 1247,
            "src": "1479:30:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1100,
              "nodeType": "Block",
              "src": "1773:169:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1080,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "1787:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1081,
                      "name": "ETHEREUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "1797:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1787:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1098,
                    "nodeType": "Block",
                    "src": "1866:70:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1094,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12656,
                                  "src": "1919:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DarknodePaymentStore_$1247",
                                    "typeString": "contract DarknodePaymentStore"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DarknodePaymentStore_$1247",
                                    "typeString": "contract DarknodePaymentStore"
                                  }
                                ],
                                "id": 1093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1911:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1911:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1090,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1075,
                                  "src": "1893:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1089,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11192,
                                "src": "1887:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$11192_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1887:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$11192",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10827,
                            "src": "1887:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1887:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1079,
                        "id": 1097,
                        "nodeType": "Return",
                        "src": "1880:45:2"
                      }
                    ]
                  },
                  "id": 1099,
                  "nodeType": "IfStatement",
                  "src": "1783:153:2",
                  "trueBody": {
                    "id": 1088,
                    "nodeType": "Block",
                    "src": "1807:53:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1084,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12656,
                                "src": "1836:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DarknodePaymentStore_$1247",
                                  "typeString": "contract DarknodePaymentStore"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DarknodePaymentStore_$1247",
                                  "typeString": "contract DarknodePaymentStore"
                                }
                              ],
                              "id": 1083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1828:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1828:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1828:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1079,
                        "id": 1087,
                        "nodeType": "Return",
                        "src": "1821:28:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Get the total balance of the contract for a particular token.\n\n    /// @param _token The token to check balance of.\n @return The total balance of the contract.",
            "id": 1101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "1727:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:16:2"
            },
            "returnParameters": {
              "id": 1079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "1764:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1763:9:2"
            },
            "scope": 1247,
            "src": "1705:237:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "2320:191:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1112,
                          "name": "lockedBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "2391:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1114,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1113,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1103,
                          "src": "2406:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2391:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461726b6e6f64655061796d656e7453746f72653a206c6f636b65642062616c616e63652065786365656420746f74616c2062616c616e6365",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2431:59:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89341de547507ecf9007a8d8f0802ae5574d1b45402f79152238119e8afd969c",
                          "typeString": "literal_string \"DarknodePaymentStore: locked balance exceed total balance\""
                        },
                        "value": "DarknodePaymentStore: locked balance exceed total balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89341de547507ecf9007a8d8f0802ae5574d1b45402f79152238119e8afd969c",
                          "typeString": "literal_string \"DarknodePaymentStore: locked balance exceed total balance\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1109,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1103,
                            "src": "2362:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1108,
                          "name": "totalBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1101,
                          "src": "2349:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2349:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10539,
                      "src": "2349:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2349:155:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1107,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "2330:174:2"
                }
              ]
            },
            "documentation": "@notice Get the available balance of the contract for a particular token\n         This is the free amount which has not yet been allocated to\n         darknodes.\n\n    /// @param _token The token to check balance of.\n @return The available balance of the contract.",
            "id": 1119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "2274:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2273:16:2"
            },
            "returnParameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1106,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "2311:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2310:9:2"
            },
            "scope": 1247,
            "src": "2248:263:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1172,
              "nodeType": "Block",
              "src": "2986:400:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1131,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "3004:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3014:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3004:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e76616c696420616d6f756e74",
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3017:38:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_221b3742be8177071ab5c5aac7d17b94f55db57f2d29a76c518206ca0399a72d",
                          "typeString": "literal_string \"DarknodePaymentStore: invalid amount\""
                        },
                        "value": "DarknodePaymentStore: invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_221b3742be8177071ab5c5aac7d17b94f55db57f2d29a76c518206ca0399a72d",
                          "typeString": "literal_string \"DarknodePaymentStore: invalid amount\""
                        }
                      ],
                      "id": 1130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12577,
                        12578
                      ],
                      "referencedDeclaration": 12578,
                      "src": "2996:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "2996:60:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1139,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1123,
                              "src": "3104:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1138,
                            "name": "availableBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "3087:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3087:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1141,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "3115:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3087:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e7420636f6e74726163742062616c616e6365",
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3136:53:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b52ca63fc9c839a18cda97d3393a6ed7f3b1defc184b02bbbda247066ee7199",
                          "typeString": "literal_string \"DarknodePaymentStore: insufficient contract balance\""
                        },
                        "value": "DarknodePaymentStore: insufficient contract balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b52ca63fc9c839a18cda97d3393a6ed7f3b1defc184b02bbbda247066ee7199",
                          "typeString": "literal_string \"DarknodePaymentStore: insufficient contract balance\""
                        }
                      ],
                      "id": 1137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12577,
                        12578
                      ],
                      "referencedDeclaration": 12578,
                      "src": "3066:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3066:133:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:133:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1146,
                          "name": "darknodeBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "3210:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1149,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "_darknode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "3227:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3210:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1150,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1148,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "3238:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3210:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1157,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "3301:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1151,
                              "name": "darknodeBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1048,
                              "src": "3248:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1153,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1152,
                              "name": "_darknode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "3265:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3248:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1155,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1154,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "3276:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3248:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10496,
                        "src": "3248:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3248:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3210:99:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1160,
                  "nodeType": "ExpressionStatement",
                  "src": "3210:99:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1161,
                        "name": "lockedBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "3319:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1163,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1162,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "3334:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3319:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1168,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "3371:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1164,
                            "name": "lockedBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "3344:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1166,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1165,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "3359:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3344:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10496,
                        "src": "3344:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3344:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3319:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1171,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:60:2"
                }
              ]
            },
            "documentation": "@notice Increments the amount of funds allocated to a particular\n         darknode.\n\n    /// @param _darknode The address of the darknode to increase balance of.\n @param _token The token which the balance should be incremented.\n @param _amount The amount that the balance should be incremented by.",
            "id": 1173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1127,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10709,
                  "src": "2976:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2976:9:2"
              }
            ],
            "name": "incrementDarknodeBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1121,
                  "name": "_darknode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "2894:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2894:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "2921:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2921:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1125,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "2945:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2884:82:2"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2986:0:2"
            },
            "scope": 1247,
            "src": "2851:535:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "3835:706:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1187,
                              "name": "darknodeBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1048,
                              "src": "3866:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1189,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1188,
                              "name": "_darknode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1175,
                              "src": "3883:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3866:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1191,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1190,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "3894:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3866:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1192,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "3905:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3866:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e74206461726b6e6f64652062616c616e6365",
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3926:53:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1aae784cf29f9246e835fdd33858cc855a4668a84c378f1391989e61eeacaaaf",
                          "typeString": "literal_string \"DarknodePaymentStore: insufficient darknode balance\""
                        },
                        "value": "DarknodePaymentStore: insufficient darknode balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1aae784cf29f9246e835fdd33858cc855a4668a84c378f1391989e61eeacaaaf",
                          "typeString": "literal_string \"DarknodePaymentStore: insufficient darknode balance\""
                        }
                      ],
                      "id": 1186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12577,
                        12578
                      ],
                      "referencedDeclaration": 12578,
                      "src": "3845:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3845:144:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
                  "src": "3845:144:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1197,
                          "name": "darknodeBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "3999:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1200,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1198,
                          "name": "_darknode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1175,
                          "src": "4016:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3999:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1201,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1199,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "4027:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3999:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1208,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "4103:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e74206461726b6e6f64652062616c616e636520666f72207472616e73666572",
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4124:66:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_845c62793b7a2e1f5acf1bd4cea3047a9a35973cd78b094a0df5d1c21d93dcab",
                            "typeString": "literal_string \"DarknodePaymentStore: insufficient darknode balance for transfer\""
                          },
                          "value": "DarknodePaymentStore: insufficient darknode balance for transfer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_845c62793b7a2e1f5acf1bd4cea3047a9a35973cd78b094a0df5d1c21d93dcab",
                            "typeString": "literal_string \"DarknodePaymentStore: insufficient darknode balance for transfer\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1202,
                              "name": "darknodeBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1048,
                              "src": "4037:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1204,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1203,
                              "name": "_darknode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1175,
                              "src": "4054:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4037:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1206,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1205,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "4065:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4037:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10539,
                        "src": "4037:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4037:163:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3999:201:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:201:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1213,
                        "name": "lockedBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "4210:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1215,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1214,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "4225:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4210:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1220,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "4275:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e7420746f6b656e2062616c616e636520666f72207472616e73666572",
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4296:63:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a640135d406017f234a42ed879e7890c303b00578f4f5bb87ed3683c1a966762",
                            "typeString": "literal_string \"DarknodePaymentStore: insufficient token balance for transfer\""
                          },
                          "value": "DarknodePaymentStore: insufficient token balance for transfer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_a640135d406017f234a42ed879e7890c303b00578f4f5bb87ed3683c1a966762",
                            "typeString": "literal_string \"DarknodePaymentStore: insufficient token balance for transfer\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1216,
                            "name": "lockedBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "4235:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1218,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1217,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "4250:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4235:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10539,
                        "src": "4235:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4235:134:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4210:159:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "4210:159:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1225,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "4384:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1226,
                      "name": "ETHEREUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "4394:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4384:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1243,
                    "nodeType": "Block",
                    "src": "4463:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1239,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1181,
                              "src": "4504:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1240,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "4516:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1236,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1177,
                                  "src": "4483:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1235,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11192,
                                "src": "4477:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$11192_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4477:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$11192",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11525,
                            "src": "4477:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4477:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1242,
                        "nodeType": "ExpressionStatement",
                        "src": "4477:47:2"
                      }
                    ]
                  },
                  "id": 1244,
                  "nodeType": "IfStatement",
                  "src": "4380:155:2",
                  "trueBody": {
                    "id": 1234,
                    "nodeType": "Block",
                    "src": "4404:53:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1231,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "4438:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1228,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1181,
                              "src": "4418:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4418:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4418:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1233,
                        "nodeType": "ExpressionStatement",
                        "src": "4418:28:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Transfers an amount out of balance to a specified address.\n\n    /// @param _darknode The address of the darknode.\n @param _token Which token to transfer.\n @param _amount The amount to transfer.\n @param _recipient The address to withdraw it to.",
            "id": 1246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1184,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1183,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10709,
                  "src": "3825:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3825:9:2"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1175,
                  "name": "_darknode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3707:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3707:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1177,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3734:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1179,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3758:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3758:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1181,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3783:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3783:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3697:118:2"
            },
            "returnParameters": {
              "id": 1185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3835:0:2"
            },
            "scope": 1247,
            "src": "3680:861:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1248,
        "src": "568:3976:2"
      }
    ],
    "src": "0:4545:2"
  },
  "legacyAST": {
    "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/DarknodePayment/DarknodePaymentStore.sol",
    "exportedSymbols": {
      "DarknodePaymentStore": [
        1247
      ]
    },
    "id": 1248,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1021,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "id": 1022,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 10657,
        "src": "25:78:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "id": 1023,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 11193,
        "src": "104:82:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
        "id": 1024,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 11713,
        "src": "187:86:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/Governance/Claimable.sol",
        "file": "../Governance/Claimable.sol",
        "id": 1025,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 5505,
        "src": "275:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/noah/github/renproject/ren-sol/contracts/libraries/ERC20WithFees.sol",
        "file": "../libraries/ERC20WithFees.sol",
        "id": 1026,
        "nodeType": "ImportDirective",
        "scope": 1248,
        "sourceUnit": 6073,
        "src": "313:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1027,
              "name": "Claimable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5504,
              "src": "601:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Claimable_$5504",
                "typeString": "contract Claimable"
              }
            },
            "id": 1028,
            "nodeType": "InheritanceSpecifier",
            "src": "601:9:2"
          }
        ],
        "contractDependencies": [
          5504,
          9349,
          10780,
          11856
        ],
        "contractKind": "contract",
        "documentation": "@notice DarknodePaymentStore is responsible for tracking balances which have\n         been allocated to the darknodes. It is also responsible for holding\n         the tokens to be paid out to darknodes.",
        "fullyImplemented": true,
        "id": 1247,
        "linearizedBaseContracts": [
          1247,
          5504,
          10780,
          9349,
          11856
        ],
        "name": "DarknodePaymentStore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1031,
            "libraryName": {
              "contractScope": null,
              "id": 1029,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10656,
              "src": "623:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10656",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "617:27:2",
            "typeName": {
              "id": 1030,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "636:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1034,
            "libraryName": {
              "contractScope": null,
              "id": 1032,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11712,
              "src": "655:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$11712",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "649:26:2",
            "typeName": {
              "contractScope": null,
              "id": 1033,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11192,
              "src": "669:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11192",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 1037,
            "libraryName": {
              "contractScope": null,
              "id": 1035,
              "name": "ERC20WithFees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6072,
              "src": "686:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20WithFees_$6072",
                "typeString": "library ERC20WithFees"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "680:30:2",
            "typeName": {
              "contractScope": null,
              "id": 1036,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11192,
              "src": "704:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11192",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 1039,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 1247,
            "src": "716:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1038,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "716:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1042,
            "name": "ETHEREUM",
            "nodeType": "VariableDeclaration",
            "scope": 1247,
            "src": "832:77:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1040,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "832:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
              "id": 1041,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "867:42:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1048,
            "name": "darknodeBalances",
            "nodeType": "VariableDeclaration",
            "scope": 1247,
            "src": "973:71:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1047,
              "keyType": {
                "id": 1043,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "981:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "973:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1046,
                "keyType": {
                  "id": 1044,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1000:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "992:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1045,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1011:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1052,
            "name": "lockedBalances",
            "nodeType": "VariableDeclaration",
            "scope": 1247,
            "src": "1101:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1051,
              "keyType": {
                "id": 1049,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1109:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1101:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1050,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1120:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1068,
              "nodeType": "Block",
              "src": "1314:77:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1060,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12574,
                          "src": "1345:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1345:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1057,
                        "name": "Claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5504,
                        "src": "1324:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Claimable_$5504_$",
                          "typeString": "type(contract Claimable)"
                        }
                      },
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5454,
                      "src": "1324:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1064,
                      "name": "VERSION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "1366:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1065,
                      "name": "_VERSION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1054,
                      "src": "1376:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1366:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:18:2"
                }
              ]
            },
            "documentation": "@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.",
            "id": 1069,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1054,
                  "name": "_VERSION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "1283:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1282:24:2"
            },
            "returnParameters": {
              "id": 1056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:0:2"
            },
            "scope": 1247,
            "src": "1271:120:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1072,
              "nodeType": "Block",
              "src": "1507:2:2",
              "statements": []
            },
            "documentation": "@notice Allow direct ETH payments to be made to the DarknodePaymentStore.",
            "id": 1073,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1487:2:2"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1507:0:2"
            },
            "scope": 1247,
            "src": "1479:30:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1100,
              "nodeType": "Block",
              "src": "1773:169:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1080,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "1787:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1081,
                      "name": "ETHEREUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "1797:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1787:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1098,
                    "nodeType": "Block",
                    "src": "1866:70:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1094,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12656,
                                  "src": "1919:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DarknodePaymentStore_$1247",
                                    "typeString": "contract DarknodePaymentStore"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DarknodePaymentStore_$1247",
                                    "typeString": "contract DarknodePaymentStore"
                                  }
                                ],
                                "id": 1093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1911:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1911:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1090,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1075,
                                  "src": "1893:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1089,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11192,
                                "src": "1887:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$11192_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1887:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$11192",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10827,
                            "src": "1887:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1887:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1079,
                        "id": 1097,
                        "nodeType": "Return",
                        "src": "1880:45:2"
                      }
                    ]
                  },
                  "id": 1099,
                  "nodeType": "IfStatement",
                  "src": "1783:153:2",
                  "trueBody": {
                    "id": 1088,
                    "nodeType": "Block",
                    "src": "1807:53:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1084,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12656,
                                "src": "1836:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DarknodePaymentStore_$1247",
                                  "typeString": "contract DarknodePaymentStore"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DarknodePaymentStore_$1247",
                                  "typeString": "contract DarknodePaymentStore"
                                }
                              ],
                              "id": 1083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1828:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1828:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1828:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1079,
                        "id": 1087,
                        "nodeType": "Return",
                        "src": "1821:28:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Get the total balance of the contract for a particular token.\n\n    /// @param _token The token to check balance of.\n @return The total balance of the contract.",
            "id": 1101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "1727:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:16:2"
            },
            "returnParameters": {
              "id": 1079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "1764:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1763:9:2"
            },
            "scope": 1247,
            "src": "1705:237:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "2320:191:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1112,
                          "name": "lockedBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "2391:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1114,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1113,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1103,
                          "src": "2406:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2391:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461726b6e6f64655061796d656e7453746f72653a206c6f636b65642062616c616e63652065786365656420746f74616c2062616c616e6365",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2431:59:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89341de547507ecf9007a8d8f0802ae5574d1b45402f79152238119e8afd969c",
                          "typeString": "literal_string \"DarknodePaymentStore: locked balance exceed total balance\""
                        },
                        "value": "DarknodePaymentStore: locked balance exceed total balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89341de547507ecf9007a8d8f0802ae5574d1b45402f79152238119e8afd969c",
                          "typeString": "literal_string \"DarknodePaymentStore: locked balance exceed total balance\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1109,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1103,
                            "src": "2362:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1108,
                          "name": "totalBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1101,
                          "src": "2349:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2349:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10539,
                      "src": "2349:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2349:155:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1107,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "2330:174:2"
                }
              ]
            },
            "documentation": "@notice Get the available balance of the contract for a particular token\n         This is the free amount which has not yet been allocated to\n         darknodes.\n\n    /// @param _token The token to check balance of.\n @return The available balance of the contract.",
            "id": 1119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "2274:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2273:16:2"
            },
            "returnParameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1106,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "2311:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2310:9:2"
            },
            "scope": 1247,
            "src": "2248:263:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1172,
              "nodeType": "Block",
              "src": "2986:400:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1131,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "3004:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3014:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3004:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e76616c696420616d6f756e74",
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3017:38:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_221b3742be8177071ab5c5aac7d17b94f55db57f2d29a76c518206ca0399a72d",
                          "typeString": "literal_string \"DarknodePaymentStore: invalid amount\""
                        },
                        "value": "DarknodePaymentStore: invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_221b3742be8177071ab5c5aac7d17b94f55db57f2d29a76c518206ca0399a72d",
                          "typeString": "literal_string \"DarknodePaymentStore: invalid amount\""
                        }
                      ],
                      "id": 1130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12577,
                        12578
                      ],
                      "referencedDeclaration": 12578,
                      "src": "2996:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "2996:60:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1139,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1123,
                              "src": "3104:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1138,
                            "name": "availableBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "3087:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3087:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1141,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "3115:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3087:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e7420636f6e74726163742062616c616e6365",
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3136:53:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b52ca63fc9c839a18cda97d3393a6ed7f3b1defc184b02bbbda247066ee7199",
                          "typeString": "literal_string \"DarknodePaymentStore: insufficient contract balance\""
                        },
                        "value": "DarknodePaymentStore: insufficient contract balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b52ca63fc9c839a18cda97d3393a6ed7f3b1defc184b02bbbda247066ee7199",
                          "typeString": "literal_string \"DarknodePaymentStore: insufficient contract balance\""
                        }
                      ],
                      "id": 1137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12577,
                        12578
                      ],
                      "referencedDeclaration": 12578,
                      "src": "3066:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3066:133:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:133:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1146,
                          "name": "darknodeBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "3210:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1149,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "_darknode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "3227:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3210:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1150,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1148,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "3238:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3210:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1157,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "3301:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1151,
                              "name": "darknodeBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1048,
                              "src": "3248:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1153,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1152,
                              "name": "_darknode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "3265:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3248:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1155,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1154,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "3276:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3248:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10496,
                        "src": "3248:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3248:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3210:99:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1160,
                  "nodeType": "ExpressionStatement",
                  "src": "3210:99:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1161,
                        "name": "lockedBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "3319:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1163,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1162,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "3334:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3319:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1168,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "3371:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1164,
                            "name": "lockedBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "3344:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1166,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1165,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "3359:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3344:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10496,
                        "src": "3344:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3344:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3319:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1171,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:60:2"
                }
              ]
            },
            "documentation": "@notice Increments the amount of funds allocated to a particular\n         darknode.\n\n    /// @param _darknode The address of the darknode to increase balance of.\n @param _token The token which the balance should be incremented.\n @param _amount The amount that the balance should be incremented by.",
            "id": 1173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1127,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10709,
                  "src": "2976:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2976:9:2"
              }
            ],
            "name": "incrementDarknodeBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1121,
                  "name": "_darknode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "2894:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2894:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "2921:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2921:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1125,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "2945:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2884:82:2"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2986:0:2"
            },
            "scope": 1247,
            "src": "2851:535:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "3835:706:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1187,
                              "name": "darknodeBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1048,
                              "src": "3866:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1189,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1188,
                              "name": "_darknode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1175,
                              "src": "3883:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3866:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1191,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1190,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "3894:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3866:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1192,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "3905:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3866:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e74206461726b6e6f64652062616c616e6365",
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3926:53:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1aae784cf29f9246e835fdd33858cc855a4668a84c378f1391989e61eeacaaaf",
                          "typeString": "literal_string \"DarknodePaymentStore: insufficient darknode balance\""
                        },
                        "value": "DarknodePaymentStore: insufficient darknode balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1aae784cf29f9246e835fdd33858cc855a4668a84c378f1391989e61eeacaaaf",
                          "typeString": "literal_string \"DarknodePaymentStore: insufficient darknode balance\""
                        }
                      ],
                      "id": 1186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12577,
                        12578
                      ],
                      "referencedDeclaration": 12578,
                      "src": "3845:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3845:144:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
                  "src": "3845:144:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1197,
                          "name": "darknodeBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "3999:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1200,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1198,
                          "name": "_darknode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1175,
                          "src": "4016:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3999:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1201,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1199,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "4027:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3999:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1208,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "4103:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e74206461726b6e6f64652062616c616e636520666f72207472616e73666572",
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4124:66:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_845c62793b7a2e1f5acf1bd4cea3047a9a35973cd78b094a0df5d1c21d93dcab",
                            "typeString": "literal_string \"DarknodePaymentStore: insufficient darknode balance for transfer\""
                          },
                          "value": "DarknodePaymentStore: insufficient darknode balance for transfer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_845c62793b7a2e1f5acf1bd4cea3047a9a35973cd78b094a0df5d1c21d93dcab",
                            "typeString": "literal_string \"DarknodePaymentStore: insufficient darknode balance for transfer\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1202,
                              "name": "darknodeBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1048,
                              "src": "4037:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1204,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1203,
                              "name": "_darknode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1175,
                              "src": "4054:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4037:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1206,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1205,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "4065:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4037:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10539,
                        "src": "4037:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4037:163:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3999:201:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:201:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1213,
                        "name": "lockedBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "4210:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1215,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1214,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "4225:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4210:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1220,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "4275:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4461726b6e6f64655061796d656e7453746f72653a20696e73756666696369656e7420746f6b656e2062616c616e636520666f72207472616e73666572",
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4296:63:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a640135d406017f234a42ed879e7890c303b00578f4f5bb87ed3683c1a966762",
                            "typeString": "literal_string \"DarknodePaymentStore: insufficient token balance for transfer\""
                          },
                          "value": "DarknodePaymentStore: insufficient token balance for transfer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_a640135d406017f234a42ed879e7890c303b00578f4f5bb87ed3683c1a966762",
                            "typeString": "literal_string \"DarknodePaymentStore: insufficient token balance for transfer\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1216,
                            "name": "lockedBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "4235:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1218,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1217,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "4250:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4235:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10539,
                        "src": "4235:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4235:134:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4210:159:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "4210:159:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1225,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "4384:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1226,
                      "name": "ETHEREUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "4394:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4384:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1243,
                    "nodeType": "Block",
                    "src": "4463:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1239,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1181,
                              "src": "4504:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1240,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "4516:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1236,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1177,
                                  "src": "4483:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1235,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11192,
                                "src": "4477:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$11192_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4477:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$11192",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11525,
                            "src": "4477:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4477:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1242,
                        "nodeType": "ExpressionStatement",
                        "src": "4477:47:2"
                      }
                    ]
                  },
                  "id": 1244,
                  "nodeType": "IfStatement",
                  "src": "4380:155:2",
                  "trueBody": {
                    "id": 1234,
                    "nodeType": "Block",
                    "src": "4404:53:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1231,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "4438:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1228,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1181,
                              "src": "4418:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4418:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4418:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1233,
                        "nodeType": "ExpressionStatement",
                        "src": "4418:28:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Transfers an amount out of balance to a specified address.\n\n    /// @param _darknode The address of the darknode.\n @param _token Which token to transfer.\n @param _amount The amount to transfer.\n @param _recipient The address to withdraw it to.",
            "id": 1246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1184,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1183,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10709,
                  "src": "3825:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3825:9:2"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1175,
                  "name": "_darknode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3707:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3707:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1177,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3734:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1179,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3758:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3758:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1181,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3783:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3783:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3697:118:2"
            },
            "returnParameters": {
              "id": 1185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3835:0:2"
            },
            "scope": 1247,
            "src": "3680:861:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1248,
        "src": "568:3976:2"
      }
    ],
    "src": "0:4545:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE33417797d6b8Aec9171d0d6516E88002fbe23E7"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-30T04:17:17.315Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "availableBalance(address)": {
        "params": {
          "_token": "The token to check balance of."
        },
        "return": "The available balance of the contract."
      },
      "constructor": {
        "params": {
          "_VERSION": "A string defining the contract version."
        }
      },
      "incrementDarknodeBalance(address,address,uint256)": {
        "params": {
          "_amount": "The amount that the balance should be incremented by.",
          "_darknode": "The address of the darknode to increase balance of.",
          "_token": "The token which the balance should be incremented."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalBalance(address)": {
        "params": {
          "_token": "The token to check balance of."
        },
        "return": "The total balance of the contract."
      },
      "transfer(address,address,uint256,address)": {
        "params": {
          "_amount": "The amount to transfer.",
          "_darknode": "The address of the darknode.",
          "_recipient": "The address to withdraw it to.",
          "_token": "Which token to transfer."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "availableBalance(address)": {
        "notice": "Get the available balance of the contract for a particular token         This is the free amount which has not yet been allocated to         darknodes. "
      },
      "constructor": "The contract constructor. ",
      "incrementDarknodeBalance(address,address,uint256)": {
        "notice": "Increments the amount of funds allocated to a particular         darknode. "
      },
      "totalBalance(address)": {
        "notice": "Get the total balance of the contract for a particular token. "
      },
      "transfer(address,address,uint256,address)": {
        "notice": "Transfers an amount out of balance to a specified address. "
      }
    },
    "notice": "DarknodePaymentStore is responsible for tracking balances which have         been allocated to the darknodes. It is also responsible for holding         the tokens to be paid out to darknodes."
  }
}